{
  "formatVersion": "1.0.0",
  "defines": {
    "id": "org.mal-lang.coreLang",
    "version": "0.5.0"
  },
  "categories": [
    {
      "name": "Vulnerability",
      "meta": {
      }
    },
    {
      "name": "ComputeResources",
      "meta": {
      }
    },
    {
      "name": "DataResources",
      "meta": {
      }
    },
    {
      "name": "IAM",
      "meta": {
      }
    },
    {
      "name": "User",
      "meta": {
      }
    },
    {
      "name": "Networking",
      "meta": {
      }
    }
  ],
  "assets": [
    {
      "name": "Vulnerability",
      "meta": {
        "user": "Vulnerability refers to the inability (of a unit or a system, application, etc.) to withstand the effects of a hostile environment."
      },
      "category": "Vulnerability",
      "isAbstract": true,
      "superAsset": null,
      "variables": [
      ],
      "attackSteps": [
        {
          "name": "remove",
          "meta": {
            "user": "If the remove defense is enabled the vulnerability will not be effective on the model."
          },
          "type": "defense",
          "tags": [
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "abuse"
              }
            ]
          }
        },
        {
          "name": "attemptAbuse",
          "meta": {
            "user": "This is the attack step that must be reached in order for a vulnerability to be able to be abused. This is also the single entry point for all vulnerabilities."
          },
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "abuse"
              }
            ]
          }
        },
        {
          "name": "abuse",
          "meta": {
            "user": "The attacker is attempting to abuse a vulnerability in an asset."
          },
          "type": "and",
          "tags": [
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "attemptExploit"
              }
            ]
          }
        },
        {
          "name": "attemptExploit",
          "meta": {
            "user": "This is the attack step that must be reached in order for a vulnerability to be able to be exploited. This is also the single checkpoint for all vulnerabilities to model hindrances to employing an exploit."
          },
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "exploit"
              }
            ]
          }
        },
        {
          "name": "exploit",
          "meta": {
            "user": "Attacker is employing an exploit that makes use of this vulnerability."
          },
          "type": "or",
          "tags": [
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "impact"
              }
            ]
          }
        },
        {
          "name": "impact",
          "meta": {
            "user": "Each vulnerability has an impact (of different levels) on the vulnerable component."
          },
          "type": "or",
          "tags": [
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": null
        }
      ]
    },
    {
      "name": "SoftwareVulnerability",
      "meta": {
        "user": "A vulnerability that affects software (i.e. Applications or SoftwareProducts)."
      },
      "category": "Vulnerability",
      "isAbstract": false,
      "superAsset": "Vulnerability",
      "variables": [
      ],
      "attackSteps": [
        {
          "name": "networkAccessRequired",
          "meta": {
            "user": "Network access is required to abuse the vulnerability.",
            "modeler": "https://www.first.org/cvss/v3.1/specification-document#2-1-1-Attack-Vector-AV"
          },
          "type": "defense",
          "tags": [
            "suppress"
          ],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "Disabled",
            "arguments": [
            ]
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "networkAccessAchieved"
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "collect",
                  "lhs": {
                    "type": "field",
                    "name": "softwareProduct"
                  },
                  "rhs": {
                    "type": "field",
                    "name": "softApplications"
                  }
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "softwareProductVulnerabilityNetworkAccessAchieved"
                }
              }
            ]
          }
        },
        {
          "name": "localAccessRequired",
          "meta": {
            "user": "Local access is required to abuse the vulnerability.",
            "modeler": "https://www.first.org/cvss/v3.1/specification-document#2-1-1-Attack-Vector-AV"
          },
          "type": "defense",
          "tags": [
            "suppress"
          ],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "Disabled",
            "arguments": [
            ]
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "localAccessAchieved"
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "collect",
                  "lhs": {
                    "type": "field",
                    "name": "softwareProduct"
                  },
                  "rhs": {
                    "type": "field",
                    "name": "softApplications"
                  }
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "softwareProductVulnerabilityLocalAccessAchieved"
                }
              }
            ]
          }
        },
        {
          "name": "physicalAccessRequired",
          "meta": {
            "user": "Physical access is required to abuse the vulnerability.",
            "modeler": "https://www.first.org/cvss/v3.1/specification-document#2-1-1-Attack-Vector-AV"
          },
          "type": "defense",
          "tags": [
            "suppress"
          ],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "Disabled",
            "arguments": [
            ]
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "physicalAccessAchieved"
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "collect",
                  "lhs": {
                    "type": "field",
                    "name": "softwareProduct"
                  },
                  "rhs": {
                    "type": "field",
                    "name": "softApplications"
                  }
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "softwareProductVulnerabilityPhysicalAccessAchieved"
                }
              }
            ]
          }
        },
        {
          "name": "lowPrivilegesRequired",
          "meta": {
            "user": "Low privileges are required to abuse the vulnerability.",
            "modeler": "https://www.first.org/cvss/v3.1/specification-document#2-1-3-Privileges-Required-PR"
          },
          "type": "defense",
          "tags": [
            "suppress"
          ],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "Disabled",
            "arguments": [
            ]
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "lowPrivilegesAchieved"
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "collect",
                  "lhs": {
                    "type": "field",
                    "name": "softwareProduct"
                  },
                  "rhs": {
                    "type": "field",
                    "name": "softApplications"
                  }
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "softwareProductVulnerabilityLowPrivilegesAchieved"
                }
              }
            ]
          }
        },
        {
          "name": "highPrivilegesRequired",
          "meta": {
            "user": "High privileges are required to abuse the vulnerability.",
            "modeler": "https://www.first.org/cvss/v3.1/specification-document#2-1-3-Privileges-Required-PR"
          },
          "type": "defense",
          "tags": [
            "suppress"
          ],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "Disabled",
            "arguments": [
            ]
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "highPrivilegesAchieved"
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "collect",
                  "lhs": {
                    "type": "field",
                    "name": "softwareProduct"
                  },
                  "rhs": {
                    "type": "field",
                    "name": "softApplications"
                  }
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "softwareProductVulnerabilityHighPrivilegesAchieved"
                }
              }
            ]
          }
        },
        {
          "name": "userInteractionRequired",
          "meta": {
            "user": "Some exploits require user interaction. This defense should specify the probability of such interaction on the given application.",
            "modeler": "https://www.first.org/cvss/v3.1/specification-document#2-1-4-User-Interaction-UI"
          },
          "type": "defense",
          "tags": [
            "suppress"
          ],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "Disabled",
            "arguments": [
            ]
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "userInteractionAchieved"
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "collect",
                  "lhs": {
                    "type": "field",
                    "name": "softwareProduct"
                  },
                  "rhs": {
                    "type": "field",
                    "name": "softApplications"
                  }
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "softwareProductVulnerabilityUserInteractionAchieved"
                }
              }
            ]
          }
        },
        {
          "name": "confidentialityImpactLimitations",
          "meta": {
            "user": "Limits the impact on confidentiality of the vulnerability.",
            "modeler": "https://www.first.org/cvss/v3.1/specification-document#2-3-1-Confidentiality-C"
          },
          "type": "defense",
          "tags": [
            "suppress"
          ],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "Disabled",
            "arguments": [
            ]
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "read"
              }
            ]
          }
        },
        {
          "name": "availabilityImpactLimitations",
          "meta": {
            "user": "Limits the impact on availability of the vulnerability.",
            "modeler": "https://www.first.org/cvss/v3.1/specification-document#2-3-3-Availability-A"
          },
          "type": "defense",
          "tags": [
            "suppress"
          ],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "Disabled",
            "arguments": [
            ]
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "deny"
              }
            ]
          }
        },
        {
          "name": "integrityImpactLimitations",
          "meta": {
            "user": "Limits the impact on integrity of the vulnerability.",
            "modeler": "https://www.first.org/cvss/v3.1/specification-document#2-3-2-Integrity-I"
          },
          "type": "defense",
          "tags": [
            "suppress"
          ],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "Disabled",
            "arguments": [
            ]
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "modify"
              }
            ]
          }
        },
        {
          "name": "highComplexityExploitRequired",
          "meta": {
            "modeler": "https://www.first.org/cvss/v3.1/specification-document#2-1-2-Attack-Complexity-AC",
            "developer": "A vulnerability that has high complexity due to its intrinsic properties that are beyond the attacker's control.",
            "user": "The vulnerability relies on a high complexity exploit that requires the attacker to expend additional effort (time) in order to successfully make use of it."
          },
          "type": "defense",
          "tags": [
            "suppress"
          ],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "Disabled",
            "arguments": [
            ]
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "exploitTrivially"
              }
            ]
          }
        },
        {
          "name": "networkAccessAchieved",
          "meta": {
            "developer": "Intermediate attack step to model network access requirement."
          },
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "abuse"
              }
            ]
          }
        },
        {
          "name": "localAccessAchieved",
          "meta": {
            "developer": "Intermediate attack step to model local access requirement."
          },
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "abuse"
              }
            ]
          }
        },
        {
          "name": "physicalAccessAchieved",
          "meta": {
            "developer": "Intermediate attack step to model physical access requirement."
          },
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "abuse"
              }
            ]
          }
        },
        {
          "name": "lowPrivilegesAchieved",
          "meta": {
            "developer": "Intermediate attack step to model low privileges requirement."
          },
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "abuse"
              }
            ]
          }
        },
        {
          "name": "highPrivilegesAchieved",
          "meta": {
            "developer": "Intermediate attack step to model high privileges requirement."
          },
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "abuse"
              }
            ]
          }
        },
        {
          "name": "userInteractionAchieved",
          "meta": {
            "developer": "Intermediate attack step to model user interaction defense."
          },
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "abuse"
              }
            ]
          }
        },
        {
          "name": "read",
          "meta": {
            "user": "The attacker can read some or all of the associated applications's code and data."
          },
          "type": "and",
          "tags": [
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "application"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "read"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "softwareProduct"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "readApplication"
                }
              }
            ]
          }
        },
        {
          "name": "modify",
          "meta": {
            "user": "The attacker can modify some or all of the associated application's data and/or source code."
          },
          "type": "and",
          "tags": [
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "application"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "modify"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "softwareProduct"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "modifyApplication"
                }
              }
            ]
          }
        },
        {
          "name": "deny",
          "meta": {
            "user": "Denial-of-Service attack is an attack in which an application is rendered unavailable to its intended users by temporarily or indefinitely disrupting it."
          },
          "type": "and",
          "tags": [
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "application"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "deny"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "softwareProduct"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "denyApplication"
                }
              }
            ]
          }
        },
        {
          "name": "attemptExploit",
          "meta": {
            "user": "This is the attack step that must be reached in order for a vulnerability to be able to be exploited. This is also the single checkpoint for all vulnerabilities to model hindrances to employing an exploit."
          },
          "type": "or",
          "tags": [
            "Override"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "exploitTrivially"
              },
              {
                "type": "attackStep",
                "name": "exploitWithEffort"
              }
            ]
          }
        },
        {
          "name": "exploitTrivially",
          "meta": {
            "user": "The exploit is trivial and requires insignificant effort from the attacker in order to be successful."
          },
          "type": "and",
          "tags": [
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "exploit"
              }
            ]
          }
        },
        {
          "name": "exploitWithEffort",
          "meta": {
            "user": "The attacker must expend effort in order to successfully exploit the vulnerability.",
            "developer": "The distribution chosen here may be scientifically sound, but needs to be reevaluated to ensure that this is the case."
          },
          "type": "and",
          "tags": [
          ],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "Exponential",
            "arguments": [
              0.01
            ]
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "exploit"
              }
            ]
          }
        },
        {
          "name": "impact",
          "meta": {
            "user": "The actual impact caused by successfully exploiting the vulnerability."
          },
          "type": "or",
          "tags": [
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "read"
              },
              {
                "type": "attackStep",
                "name": "modify"
              },
              {
                "type": "attackStep",
                "name": "deny"
              }
            ]
          }
        }
      ]
    },
    {
      "name": "HardwareVulnerability",
      "meta": {
        "user": "A vulnerability that affects hardware."
      },
      "category": "Vulnerability",
      "isAbstract": false,
      "superAsset": "Vulnerability",
      "variables": [
      ],
      "attackSteps": [
        {
          "name": "confidentialityImpactLimitations",
          "meta": {
            "user": "Limits the impact on confidentiality of the vulnerability.",
            "modeler": "Analogous defence to the SoftwareVulnerability impact limitations."
          },
          "type": "defense",
          "tags": [
            "suppress"
          ],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "Disabled",
            "arguments": [
            ]
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "read"
              }
            ]
          }
        },
        {
          "name": "availabilityImpactLimitations",
          "meta": {
            "user": "Limits the impact on availability of the vulnerability.",
            "modeler": "Analogous defence to the SoftwareVulnerability impact limitations."
          },
          "type": "defense",
          "tags": [
            "suppress"
          ],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "Disabled",
            "arguments": [
            ]
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "deny"
              }
            ]
          }
        },
        {
          "name": "integrityImpactLimitations",
          "meta": {
            "user": "Limits the impact on integrity of the vulnerability.",
            "modeler": "Analogous defence to the SoftwareVulnerability impact limitations."
          },
          "type": "defense",
          "tags": [
            "suppress"
          ],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "Disabled",
            "arguments": [
            ]
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "modify"
              }
            ]
          }
        },
        {
          "name": "effortRequiredToExploit",
          "meta": {
            "user": "The vulnerability requires additional effort(time) from the attacker in order to be successful.",
            "modeler": "The expectation is that the attacker has prolonged or recurring access to the targeted hardware in order to repeatedly/continuously attempt the exploit."
          },
          "type": "defense",
          "tags": [
            "suppress"
          ],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "Disabled",
            "arguments": [
            ]
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "exploitTrivially"
              }
            ]
          }
        },
        {
          "name": "read",
          "meta": {
            "user": "The attacker can read some or all of the associated hardware's data."
          },
          "type": "and",
          "tags": [
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "hardware"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "read"
                }
              }
            ]
          }
        },
        {
          "name": "modify",
          "meta": {
            "user": "The attacker can modify some or all of the associated hardware's behaviour."
          },
          "type": "and",
          "tags": [
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "hardware"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "modify"
                }
              }
            ]
          }
        },
        {
          "name": "deny",
          "meta": {
            "user": "Denial-of-Service attack is an attack in which a machine or hardware component is rendered unavailable to its intended users by temporarily or indefinitely disrupting it."
          },
          "type": "and",
          "tags": [
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "hardware"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "deny"
                }
              }
            ]
          }
        },
        {
          "name": "attemptExploit",
          "meta": {
            "user": "This is the attack step that must be reached in order for a vulnerability to be able to be exploited. This is also the single checkpoint for all vulnerabilities to model hindrances to employing an exploit."
          },
          "type": "or",
          "tags": [
            "Override"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "exploitTrivially"
              },
              {
                "type": "attackStep",
                "name": "exploitWithEffort"
              }
            ]
          }
        },
        {
          "name": "exploitTrivially",
          "meta": {
            "user": "The exploit is trivial and requires insignificant effort from the attacker in order to be successful."
          },
          "type": "and",
          "tags": [
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "exploit"
              }
            ]
          }
        },
        {
          "name": "exploitWithEffort",
          "meta": {
            "user": "The attacker must expend effort in order to successfully exploit the vulnerability.",
            "developer": "The distribution chosen here may be scientifically sound, but needs to be reevaluated to ensure that this is the case."
          },
          "type": "and",
          "tags": [
          ],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "Exponential",
            "arguments": [
              0.01
            ]
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "exploit"
              }
            ]
          }
        },
        {
          "name": "impact",
          "meta": {
            "user": "The actual impact caused by successfully exploiting the vulnerability."
          },
          "type": "or",
          "tags": [
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "read"
              },
              {
                "type": "attackStep",
                "name": "modify"
              },
              {
                "type": "attackStep",
                "name": "deny"
              }
            ]
          }
        }
      ]
    },
    {
      "name": "Hardware",
      "meta": {
        "user": "Specifies the hardware on which applications can run."
      },
      "category": "ComputeResources",
      "isAbstract": false,
      "superAsset": null,
      "variables": [
      ],
      "attackSteps": [
        {
          "name": "attemptUseVulnerability",
          "meta": {
            "developer": "Intermediate attack step to allow for defences."
          },
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "useVulnerability"
              }
            ]
          }
        },
        {
          "name": "useVulnerability",
          "meta": {
            "user": "The attacker is able to use the connected vulnerabilities, usually as a result of obtaining physical access."
          },
          "type": "and",
          "tags": [
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "vulnerabilities"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptAbuse"
                }
              }
            ]
          }
        },
        {
          "name": "attemptGainFullAccess",
          "meta": {
            "developer": "Intermediate attack step to allow for defences."
          },
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "fullAccess"
              }
            ]
          }
        },
        {
          "name": "fullAccess",
          "meta": {
            "user": "Full access on a piece of hardware confers full access on the applications running on it and access to the hosted data."
          },
          "type": "and",
          "tags": [
          ],
          "risk": {
            "isConfidentiality": true,
            "isIntegrity": true,
            "isAvailability": true
          },
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "sysExecutedApps"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "fullAccess"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "hostedData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptAccess"
                }
              }
            ]
          }
        },
        {
          "name": "attemptSupplyChainAttack",
          "meta": {
            "developer": "Intermediate attack step to allow for the auditing defence."
          },
          "type": "or",
          "tags": [
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "supplyChainAttack"
              }
            ]
          }
        },
        {
          "name": "supplyChainAttack",
          "meta": {
            "modeler": "The probability function and its value is just an estimation! The Hardware supply chain attack represents an attacker being able to tamper with the hardware/firmware before the deployment of the product and not alterations made to the hardware/firmware once it is operating.",
            "developer": "Based on supply chain attacks in icsLang as designed by Sotirios.",
            "user": "Adversaries may perform supply chain compromise attacks to gain control of hardware before it is put into use."
          },
          "type": "and",
          "tags": [
          ],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "VeryHardAndUncertain",
            "arguments": [
            ]
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "bypassHardwareModificationsProtection"
              }
            ]
          }
        },
        {
          "name": "supplyChainAuditing",
          "meta": {
            "user": "Auditing inside the supply chain can detect possible supply chain attacks.",
            "developer": "Mitigation moved into coreLang from icsLang. Originally designed by Sotirios."
          },
          "type": "defense",
          "tags": [
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "supplyChainAttack"
              }
            ]
          }
        },
        {
          "name": "physicalAccess",
          "meta": {
            "user": "Attacker has physical access to the location where the hardware is physically deployed. They could then deny the hardware, locally connect to the hosted applications, and exploit physical vulnerabilities."
          },
          "type": "or",
          "tags": [
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "deny"
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "sysExecutedApps"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "localConnect"
                }
              },
              {
                "type": "attackStep",
                "name": "attemptHardwareModifications"
              }
            ]
          }
        },
        {
          "name": "attemptHardwareModifications",
          "meta": {
            "developer": "Intermediate attack step."
          },
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "successfulHardwareModifications"
              }
            ]
          }
        },
        {
          "name": "successfulHardwareModifications",
          "meta": {
            "developer": "Intermediate attack step to enable defences."
          },
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "hardwareModifications"
              }
            ]
          }
        },
        {
          "name": "hardwareModifications",
          "meta": {
            "user": "Attacker is able to modify the hardware setup. They could then exploit physical vulnerabilities or software vulnerabilities that require physical access."
          },
          "type": "or",
          "tags": [
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "attemptUseVulnerability"
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "sysExecutedApps"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "physicalAccessAchieved"
                }
              }
            ]
          }
        },
        {
          "name": "hardwareModificationsProtection",
          "meta": {
            "user": "This defence protects against unauthorized modifications to the hardware that would allow an attacker to exploit a hardware vulnerability or a user to connect malicious devices to it.",
            "developer": "But it does not protect against denial of service attacks or local connect."
          },
          "type": "defense",
          "tags": [
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "useVulnerability"
              },
              {
                "type": "attackStep",
                "name": "successfulHardwareModifications"
              },
              {
                "type": "attackStep",
                "name": "unsafeUserActivity"
              }
            ]
          }
        },
        {
          "name": "attemptUnsafeUserActivity",
          "meta": {
            "user": "Intermediate attack step that allows for the hardware modifications defence to reduce the impact of unsafe user activity."
          },
          "type": "or",
          "tags": [
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "unsafeUserActivity"
              }
            ]
          }
        },
        {
          "name": "unsafeUserActivity",
          "meta": {
            "modeler": "Currently only represents connecting a malicious removable media drive.",
            "developer": "This exposes the Applications running on top of the hardware and fulfils the physical access requirement of SoftwareVulnerabilities associated with them.",
            "user": "A user is performing unsafe actions on the hardware."
          },
          "type": "and",
          "tags": [
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "sysExecutedApps"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptUnsafeUserActivity"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "sysExecutedApps"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "physicalAccessAchieved"
                }
              }
            ]
          }
        },
        {
          "name": "deny",
          "meta": {
            "user": "Denial of service (DoS) attack on hardware leads to DoS on all the applications running on it and hosted data."
          },
          "type": "or",
          "tags": [
          ],
          "risk": {
            "isConfidentiality": false,
            "isIntegrity": false,
            "isAvailability": true
          },
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "sysExecutedApps"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptDeny"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "hostedData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptDeny"
                }
              }
            ]
          }
        },
        {
          "name": "read",
          "meta": {
            "user": "Read on hardware leads to a read on all the applications running on it and hosted data."
          },
          "type": "or",
          "tags": [
          ],
          "risk": {
            "isConfidentiality": true,
            "isIntegrity": false,
            "isAvailability": false
          },
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "sysExecutedApps"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptRead"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "hostedData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptRead"
                }
              }
            ]
          }
        },
        {
          "name": "modify",
          "meta": {
            "user": "Modify on hardware leads to a modify/write on all the applications running on it and hosted data."
          },
          "type": "or",
          "tags": [
          ],
          "risk": {
            "isConfidentiality": false,
            "isIntegrity": true,
            "isAvailability": false
          },
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "attemptGainFullAccess"
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "sysExecutedApps"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptModify"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "hostedData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptWrite"
                }
              }
            ]
          }
        },
        {
          "name": "bypassHardwareModificationsProtection",
          "meta": {
            "user": "The attacker can bypass the hardware modifications protection and gain full access after performing a supply chain attack."
          },
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": {
            "isConfidentiality": true,
            "isIntegrity": true,
            "isAvailability": false
          },
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "attemptGainFullAccess"
              }
            ]
          }
        }
      ]
    },
    {
      "name": "SoftwareProduct",
      "meta": {
        "user": "A software product is a specific type of software/application which can be associated with specific vulnerabilities.",
        "developer": "This asset is only introduced in order to improve the usability of the language."
      },
      "category": "ComputeResources",
      "isAbstract": false,
      "superAsset": "Information",
      "variables": [
      ],
      "attackSteps": [
        {
          "name": "compromiseApplication",
          "meta": {
            "user": "If the origin of a software product is compromised (modified maliciously) then the associated application should also be fully compromised."
          },
          "type": "or",
          "tags": [
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "softApplications"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptFullAccessAfterSoftProdCompromise"
                }
              }
            ]
          }
        },
        {
          "name": "readApplication",
          "meta": {
            "user": "If the vulnerability has a read imapct, it should propagate that on all the applications."
          },
          "type": "or",
          "tags": [
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "softApplications"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptReadAfterSoftProdVulnerability"
                }
              }
            ]
          }
        },
        {
          "name": "modifyApplication",
          "meta": {
            "user": "If the vulnerability has a modify imapct, it should propagate that on all the applications."
          },
          "type": "or",
          "tags": [
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "softApplications"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptModifyAfterSoftProdVulnerability"
                }
              }
            ]
          }
        },
        {
          "name": "denyApplication",
          "meta": {
            "user": "If the vulnerability has a deny imapct, it should propagate that on all the applications."
          },
          "type": "or",
          "tags": [
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "softApplications"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptDenyAfterSoftProdVulnerability"
                }
              }
            ]
          }
        },
        {
          "name": "write",
          "meta": {
            "developer": "If the attacker is able to write the software product they are able to compromise the applications using it."
          },
          "type": "and",
          "tags": [
            "Override"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": false,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "compromiseApplication"
              }
            ]
          }
        }
      ]
    },
    {
      "name": "Application",
      "meta": {
        "user": "An application models pretty much everything that is executed or can execute other applications."
      },
      "category": "ComputeResources",
      "isAbstract": false,
      "superAsset": null,
      "variables": [
        {
          "name": "allVulnerabilities",
          "stepExpression": {
            "type": "union",
            "lhs": {
              "type": "field",
              "name": "vulnerabilities"
            },
            "rhs": {
              "type": "collect",
              "lhs": {
                "type": "field",
                "name": "appSoftProduct"
              },
              "rhs": {
                "type": "field",
                "name": "softProductVulnerabilities"
              }
            }
          }
        },
        {
          "name": "allApplicationConnections",
          "stepExpression": {
            "type": "union",
            "lhs": {
              "type": "union",
              "lhs": {
                "type": "field",
                "name": "appConnections"
              },
              "rhs": {
                "type": "field",
                "name": "outgoingAppConnections"
              }
            },
            "rhs": {
              "type": "field",
              "name": "ingoingAppConnections"
            }
          }
        },
        {
          "name": "clientApplicationConnections",
          "stepExpression": {
            "type": "union",
            "lhs": {
              "type": "field",
              "name": "appConnections"
            },
            "rhs": {
              "type": "field",
              "name": "outgoingAppConnections"
            }
          }
        },
        {
          "name": "serverApplicationConnections",
          "stepExpression": {
            "type": "union",
            "lhs": {
              "type": "field",
              "name": "appConnections"
            },
            "rhs": {
              "type": "field",
              "name": "ingoingAppConnections"
            }
          }
        }
      ],
      "attackSteps": [
        {
          "name": "disabled",
          "meta": {
            "user": "If application is disabled it should behave as nonexistent, thus all attack vectors are removed.",
            "developer": "This would even allow us to have a much more dynamic and probabilistic aspect on our model and simulations."
          },
          "type": "defense",
          "tags": [
          ],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "Disabled",
            "arguments": [
            ]
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "specificAccessFromLocalConnection"
              },
              {
                "type": "attackStep",
                "name": "specificAccessFromNetworkConnection"
              },
              {
                "type": "attackStep",
                "name": "localAccess"
              },
              {
                "type": "attackStep",
                "name": "networkAccess"
              },
              {
                "type": "attackStep",
                "name": "fullAccessAfterSoftProdVulnerability"
              },
              {
                "type": "attackStep",
                "name": "readAfterSoftProdVulnerability"
              },
              {
                "type": "attackStep",
                "name": "modifyAfterSoftProdVulnerability"
              },
              {
                "type": "attackStep",
                "name": "denyAfterSoftProdVulnerability"
              },
              {
                "type": "attackStep",
                "name": "successfulReverseReach"
              },
              {
                "type": "attackStep",
                "name": "successfulUseVulnerability"
              },
              {
                "type": "attackStep",
                "name": "successfulApplicationRespondConnectThroughData"
              },
              {
                "type": "attackStep",
                "name": "successfulRead"
              },
              {
                "type": "attackStep",
                "name": "successfulModify"
              },
              {
                "type": "attackStep",
                "name": "successfulDeny"
              }
            ]
          }
        },
        {
          "name": "attemptUseVulnerability",
          "meta": {
            "developer": "Attempt to use the connected vulnerabilities, when able to locally or via network connect to the application or when local interaction is possible."
          },
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "successfulUseVulnerability"
              }
            ]
          }
        },
        {
          "name": "successfulUseVulnerability",
          "meta": {
            "developer": "Intermediate attack step to model the case where vulnerabilities should not be compromised because application is disabled."
          },
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "useVulnerability"
              }
            ]
          }
        },
        {
          "name": "useVulnerability",
          "meta": {
            "user": "Attempt to exploit the the connected vulnerabilities."
          },
          "type": "or",
          "tags": [
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "variable",
                  "name": "allVulnerabilities"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptAbuse"
                }
              },
              {
                "type": "attackStep",
                "name": "attemptSoftwareProductAbuse"
              },
              {
                "type": "attackStep",
                "name": "fullAccessAfterSoftProdVulnerability"
              },
              {
                "type": "attackStep",
                "name": "readAfterSoftProdVulnerability"
              },
              {
                "type": "attackStep",
                "name": "modifyAfterSoftProdVulnerability"
              },
              {
                "type": "attackStep",
                "name": "denyAfterSoftProdVulnerability"
              }
            ]
          }
        },
        {
          "name": "attemptReverseReach",
          "meta": {
            "modeller": "No other attack step on the Application asset triggers this attack step which means that it must be explicitly triggered by the modeller if the attacker is assumed to have reverse reachability on it.",
            "developer": "This attack step needs to be called in order to have reverse reach start propagating from this Application to the rest of the assets."
          },
          "type": "or",
          "tags": [
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "successfulReverseReach"
              }
            ]
          }
        },
        {
          "name": "successfulReverseReach",
          "meta": {
            "developer": "Intermediate attack step to model defences."
          },
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "reverseReach"
              }
            ]
          }
        },
        {
          "name": "reverseReach",
          "meta": {
            "developer": "Reverse reach is used to determine whether or not the attacker can be reached by the user."
          },
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "networks"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptReverseReach"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "clientAccessNetworks"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptReverseReach"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "variable",
                  "name": "serverApplicationConnections"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptReverseReach"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "appExecutedApps"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptReverseReach"
                }
              },
              {
                "type": "attackStep",
                "name": "unsafeUserActivityWithAttackerInteraction"
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "containedData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptReverseReach"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "sentData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptReverseReach"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "receivedData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptReverseReach"
                }
              },
              {
                "type": "attackStep",
                "name": "networkConnectViaResponse"
              }
            ]
          }
        },
        {
          "name": "localConnect",
          "meta": {
            "user": "An attacker with low-privilege access on the executing instance is assumed to be able to locally (on the same host i.e. using loopback) interact with the application."
          },
          "type": "or",
          "tags": [
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "localAccess"
              },
              {
                "type": "attackStep",
                "name": "specificAccessFromLocalConnection"
              },
              {
                "type": "attackStep",
                "name": "attemptUseVulnerability"
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "variable",
                  "name": "allVulnerabilities"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "localAccessAchieved"
                }
              },
              {
                "type": "attackStep",
                "name": "softwareProductVulnerabilityLocalAccessAchieved"
              }
            ]
          }
        },
        {
          "name": "networkConnect",
          "meta": {
            "user": "An attacker can connect to any network exposed application and attempt to authenticate or trigger vulnerabilities."
          },
          "type": "or",
          "tags": [
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "networkConnectWithoutTriggeringVulnerabilities"
              },
              {
                "type": "attackStep",
                "name": "attemptUseVulnerability"
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "variable",
                  "name": "allVulnerabilities"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "networkAccessAchieved"
                }
              },
              {
                "type": "attackStep",
                "name": "softwareProductVulnerabilityNetworkAccessAchieved"
              }
            ]
          }
        },
        {
          "name": "networkConnectWithoutTriggeringVulnerabilities",
          "meta": {
            "developer": "This attack step is used if the network connection occurs via a ConnectionRule that has its payload inspected, in which case the attacker can still authenticate, but they cannot trigger vulnerabilities."
          },
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "networkAccess"
              },
              {
                "type": "attackStep",
                "name": "specificAccessFromNetworkConnection"
              }
            ]
          }
        },
        {
          "name": "accessNetworkAndConnections",
          "meta": {
            "user": "An attacker is also possible to access the network(s) and connections to which this application is connected to, and perform client-side attacks."
          },
          "type": "or",
          "tags": [
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "networks"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "access"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "clientAccessNetworks"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "access"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "variable",
                  "name": "clientApplicationConnections"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptConnectToApplications"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "variable",
                  "name": "clientApplicationConnections"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptAccessNetworks"
                }
              }
            ]
          }
        },
        {
          "name": "attemptNetworkConnectViaResponse",
          "meta": {
            "developer": "Intermediate attack step to handle defences."
          },
          "type": "or",
          "tags": [
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "networkConnectViaResponse"
              }
            ]
          }
        },
        {
          "name": "networkConnectViaResponse",
          "meta": {
            "modeler": "The probability and its value are just estimations and are subject to change.",
            "developer": "Adopted from awsLang.",
            "user": "An attacker may be able to respond to requests submitted by a client application."
          },
          "type": "and",
          "tags": [
          ],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "VeryHardAndUncertain",
            "arguments": [
            ]
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "networkConnect"
              }
            ]
          }
        },
        {
          "name": "specificAccessFromLocalConnection",
          "meta": {
            "developer": "This intermediate step is used to represent that localConnect has happened before being able to get 'specificAccess'. Same as 'localAccess' attack step."
          },
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "specificAccess"
              }
            ]
          }
        },
        {
          "name": "specificAccessFromNetworkConnection",
          "meta": {
            "developer": "This intermediate step is used to represent that networkConnect has happened before being able to get 'specificAccess'. Same as 'networkAccess' attack step."
          },
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "specificAccess"
              }
            ]
          }
        },
        {
          "name": "specificAccess",
          "meta": {
            "user": "This level of access models a low-privilege access and requires all other privileges to be modeled separately.",
            "developer": "An attacker with low-privilege access on the executing instance is assumed to be able to locally (on the same host i.e. using loopback) interact with the executed applications."
          },
          "type": "or",
          "tags": [
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "appExecutedApps"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "localConnect"
                }
              },
              {
                "type": "attackStep",
                "name": "attemptLocalConnectVulnOnHost"
              },
              {
                "type": "attackStep",
                "name": "attemptUseVulnerability"
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "containedData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptAccessFromIdentity"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "sentData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "identityAttemptRead"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "receivedData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "identityAttemptRead"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "sentData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptIdentityWriteDataInTransitFromApplication"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "variable",
                  "name": "clientApplicationConnections"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptAllowWriteDataInTransit"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "variable",
                  "name": "clientApplicationConnections"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptAllowDenyDataInTransit"
                }
              },
              {
                "type": "attackStep",
                "name": "attemptApplicationRespondConnectThroughData"
              },
              {
                "type": "attackStep",
                "name": "accessNetworkAndConnections"
              }
            ]
          }
        },
        {
          "name": "attemptLocalConnectVulnOnHost",
          "meta": {
            "user": "The attacker is able to break out of an application container/sandbox and try to exploit any vulnerability of the hypervisor/host application",
            "modeler": "The probability and its value are just estimations and are subject to change."
          },
          "type": "or",
          "tags": [
          ],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "HardAndUncertain",
            "arguments": [
            ]
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "hostApp"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptUseVulnerability"
                }
              }
            ]
          }
        },
        {
          "name": "authenticate",
          "meta": {
            "user": "The attacker is able to authenticate with the appropriate credentials."
          },
          "type": "or",
          "tags": [
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "localAccess"
              },
              {
                "type": "attackStep",
                "name": "networkAccess"
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "variable",
                  "name": "allVulnerabilities"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "highPrivilegesAchieved"
                }
              },
              {
                "type": "attackStep",
                "name": "softwareProductVulnerabilityHighPrivilegesAchieved"
              }
            ]
          }
        },
        {
          "name": "specificAccessAuthenticate",
          "meta": {
            "user": "The attacker is able to authenticate with the appropriate specific access credentials."
          },
          "type": "or",
          "tags": [
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "specificAccessFromLocalConnection"
              },
              {
                "type": "attackStep",
                "name": "specificAccessFromNetworkConnection"
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "variable",
                  "name": "allVulnerabilities"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "lowPrivilegesAchieved"
                }
              },
              {
                "type": "attackStep",
                "name": "softwareProductVulnerabilityLowPrivilegesAchieved"
              }
            ]
          }
        },
        {
          "name": "localAccess",
          "meta": {
            "developer": "Intermediate attack steps for modeling the two requirements (reachabiltiy and authentication) for access."
          },
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "fullAccess"
              }
            ]
          }
        },
        {
          "name": "networkAccess",
          "meta": {
            "developer": "Intermediate attack steps for modeling the two requirements (reachabiltiy and authentication) for access."
          },
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "fullAccess"
              }
            ]
          }
        },
        {
          "name": "fullAccess",
          "meta": {
            "user": "Legitimate (or not i.e. 0wned) full access on the Application, as root/administrator."
          },
          "type": "or",
          "tags": [
          ],
          "risk": {
            "isConfidentiality": true,
            "isIntegrity": true,
            "isAvailability": true
          },
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "attemptRead"
              },
              {
                "type": "attackStep",
                "name": "attemptModify"
              },
              {
                "type": "attackStep",
                "name": "attemptDeny"
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "appExecutedApps"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptModify"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "executionPrivIAMs"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptAssume"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "containedData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptAccess"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "sentData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptRead"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "receivedData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptRead"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "sentData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptWriteDataInTransitFromApplication"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "variable",
                  "name": "clientApplicationConnections"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptAllowWriteDataInTransit"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "variable",
                  "name": "clientApplicationConnections"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptAllowDenyDataInTransit"
                }
              },
              {
                "type": "attackStep",
                "name": "attemptApplicationRespondConnectThroughData"
              },
              {
                "type": "attackStep",
                "name": "accessNetworkAndConnections"
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "hostApp"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "localConnect"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "managedRoutingFw"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptModify"
                }
              },
              {
                "type": "attackStep",
                "name": "specificAccess"
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "hostHardware"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptUseVulnerability"
                }
              }
            ]
          }
        },
        {
          "name": "physicalAccessAchieved",
          "meta": {
            "developer": "Intermediate attack step used to propagate physical access throughout application nesting."
          },
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "variable",
                  "name": "allVulnerabilities"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "physicalAccessAchieved"
                }
              },
              {
                "type": "attackStep",
                "name": "softwareProductVulnerabilityPhysicalAccessAchieved"
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "appExecutedApps"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "physicalAccessAchieved"
                }
              }
            ]
          }
        },
        {
          "name": "attemptUnsafeActivityByUser",
          "meta": {
            "developer": "Intermediate attack step."
          },
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "unsafeActivityByUser"
              }
            ]
          }
        },
        {
          "name": "unsafeActivityByUser",
          "meta": {
            "user": "The unsafe actions of users on this application open it up to attacks and enable vulnerabilities that require user interaction."
          },
          "type": "and",
          "tags": [
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "localConnect"
              },
              {
                "type": "attackStep",
                "name": "networkConnect"
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "variable",
                  "name": "allVulnerabilities"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "userInteractionAchieved"
                }
              }
            ]
          }
        },
        {
          "name": "unsafeUserActivityWithAttackerInteraction",
          "meta": {
            "developer": "The attacker can be reached from this application and can therefore more easily exploit the unsafe user actions."
          },
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "attemptUnsafeActivityByUser"
              }
            ]
          }
        },
        {
          "name": "unsafeUserActivityWithoutAttackerInteraction",
          "meta": {
            "developer": "The attacker cannot be reached from this application. This means that the autonomous malicious code must either be able to do reconnaissance on the fly or the reconnaissance was done before and coded into it. This is much more complex and difficult than the situation where the attacker is reachable from the application. Important Note: This step should never directly or indirectly lead to reverse reach as it would fulfil the attacker interactivity requirements its counterpart is missing."
          },
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "VeryHardAndUncertain",
            "arguments": [
            ]
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "attemptUnsafeActivityByUser"
              }
            ]
          }
        },
        {
          "name": "attemptUnsafeUserActivity",
          "meta": {
            "developer": "This attack step represents a user with privileges on this application engaging in unsafe behaviour that could lead to exposing the application to the attacker."
          },
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "unsafeUserActivityWithAttackerInteraction"
              },
              {
                "type": "attackStep",
                "name": "unsafeUserActivityWithoutAttackerInteraction"
              }
            ]
          }
        },
        {
          "name": "supplyChainAuditing",
          "meta": {
            "user": "Auditing inside the supply chain can detect possible supply chain attacks.",
            "developer": "Mitigation based on the hardware/firmware supply chain attack mitigation in icsLang as designed by Sotirios."
          },
          "type": "defense",
          "tags": [
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "fullAccessAfterSoftProdCompromise"
              }
            ]
          }
        },
        {
          "name": "attemptFullAccessAfterSoftProdCompromise",
          "meta": {
            "developer": "Intermediate attack step."
          },
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "fullAccessAfterSoftProdCompromise"
              }
            ]
          }
        },
        {
          "name": "fullAccessAfterSoftProdCompromise",
          "meta": {
            "developer": "Intermediate attack step."
          },
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "fullAccess"
              }
            ]
          }
        },
        {
          "name": "attemptFullAccessAfterSoftProdVulnerability",
          "meta": {
            "developer": "Intermediate attack step."
          },
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "fullAccessAfterSoftProdVulnerability"
              }
            ]
          }
        },
        {
          "name": "attemptReadAfterSoftProdVulnerability",
          "meta": {
            "developer": "Intermediate attack step."
          },
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "readAfterSoftProdVulnerability"
              }
            ]
          }
        },
        {
          "name": "attemptModifyAfterSoftProdVulnerability",
          "meta": {
            "developer": "Intermediate attack step."
          },
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "modifyAfterSoftProdVulnerability"
              }
            ]
          }
        },
        {
          "name": "attemptDenyAfterSoftProdVulnerability",
          "meta": {
            "developer": "Intermediate attack step."
          },
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "denyAfterSoftProdVulnerability"
              }
            ]
          }
        },
        {
          "name": "softwareCheck",
          "meta": {
            "user": "Existence attack step to only allow the connected attacks steps only if a SoftwareProduct is associated."
          },
          "type": "exist",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "field",
                "name": "appSoftProduct"
              }
            ]
          },
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "fullAccessAfterSoftProdVulnerability"
              },
              {
                "type": "attackStep",
                "name": "readAfterSoftProdVulnerability"
              },
              {
                "type": "attackStep",
                "name": "modifyAfterSoftProdVulnerability"
              },
              {
                "type": "attackStep",
                "name": "denyAfterSoftProdVulnerability"
              }
            ]
          }
        },
        {
          "name": "softwareProductVulnerabilityLocalAccessAchieved",
          "meta": {
            "developer": "Intermediate attack step used to conditionally trigger SoftwareProduct vulnerabilities separately for each application."
          },
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "collect",
                  "lhs": {
                    "type": "field",
                    "name": "appSoftProduct"
                  },
                  "rhs": {
                    "type": "field",
                    "name": "softProductVulnerabilities"
                  }
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "localAccessAchieved"
                }
              },
              {
                "type": "attackStep",
                "name": "softwareProductAbuse"
              }
            ]
          }
        },
        {
          "name": "softwareProductVulnerabilityNetworkAccessAchieved",
          "meta": {
            "developer": "Intermediate attack step used to conditionally trigger SoftwareProduct vulnerabilities separately for each application."
          },
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "collect",
                  "lhs": {
                    "type": "field",
                    "name": "appSoftProduct"
                  },
                  "rhs": {
                    "type": "field",
                    "name": "softProductVulnerabilities"
                  }
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "networkAccessAchieved"
                }
              },
              {
                "type": "attackStep",
                "name": "softwareProductAbuse"
              }
            ]
          }
        },
        {
          "name": "softwareProductVulnerabilityPhysicalAccessAchieved",
          "meta": {
            "developer": "Intermediate attack step used to conditionally trigger SoftwareProduct vulnerabilities separately for each application."
          },
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "collect",
                  "lhs": {
                    "type": "field",
                    "name": "appSoftProduct"
                  },
                  "rhs": {
                    "type": "field",
                    "name": "softProductVulnerabilities"
                  }
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "physicalAccessAchieved"
                }
              },
              {
                "type": "attackStep",
                "name": "softwareProductAbuse"
              }
            ]
          }
        },
        {
          "name": "softwareProductVulnerabilityLowPrivilegesAchieved",
          "meta": {
            "developer": "Intermediate attack step used to conditionally trigger SoftwareProduct vulnerabilities separately for each application."
          },
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "collect",
                  "lhs": {
                    "type": "field",
                    "name": "appSoftProduct"
                  },
                  "rhs": {
                    "type": "field",
                    "name": "softProductVulnerabilities"
                  }
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "lowPrivilegesAchieved"
                }
              },
              {
                "type": "attackStep",
                "name": "softwareProductAbuse"
              }
            ]
          }
        },
        {
          "name": "softwareProductVulnerabilityHighPrivilegesAchieved",
          "meta": {
            "developer": "Intermediate attack step used to conditionally trigger SoftwareProduct vulnerabilities separately for each application."
          },
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "collect",
                  "lhs": {
                    "type": "field",
                    "name": "appSoftProduct"
                  },
                  "rhs": {
                    "type": "field",
                    "name": "softProductVulnerabilities"
                  }
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "highPrivilegesAchieved"
                }
              },
              {
                "type": "attackStep",
                "name": "softwareProductAbuse"
              }
            ]
          }
        },
        {
          "name": "softwareProductVulnerabilityUserInteractionAchieved",
          "meta": {
            "developer": "Intermediate attack step used to conditionally trigger SoftwareProduct vulnerabilities separately for each application."
          },
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "collect",
                  "lhs": {
                    "type": "field",
                    "name": "appSoftProduct"
                  },
                  "rhs": {
                    "type": "field",
                    "name": "softProductVulnerabilities"
                  }
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "userInteractionAchieved"
                }
              },
              {
                "type": "attackStep",
                "name": "softwareProductAbuse"
              }
            ]
          }
        },
        {
          "name": "attemptSoftwareProductAbuse",
          "meta": {
            "developer": "Intermediate attack step used to conditionally trigger SoftwareProduct vulnerabilities separately for each application."
          },
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "softwareProductAbuse"
              }
            ]
          }
        },
        {
          "name": "softwareProductAbuse",
          "meta": {
            "developer": "Intermediate attack step used to conditionally trigger SoftwareProduct vulnerabilities separately for each application."
          },
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "fullAccessAfterSoftProdVulnerability"
              },
              {
                "type": "attackStep",
                "name": "readAfterSoftProdVulnerability"
              },
              {
                "type": "attackStep",
                "name": "modifyAfterSoftProdVulnerability"
              },
              {
                "type": "attackStep",
                "name": "denyAfterSoftProdVulnerability"
              }
            ]
          }
        },
        {
          "name": "fullAccessAfterSoftProdVulnerability",
          "meta": {
            "developer": "Intermediate attack step to handle existence."
          },
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "fullAccess"
              }
            ]
          }
        },
        {
          "name": "readAfterSoftProdVulnerability",
          "meta": {
            "developer": "Intermediate attack step to handle existence."
          },
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "attemptRead"
              }
            ]
          }
        },
        {
          "name": "modifyAfterSoftProdVulnerability",
          "meta": {
            "developer": "Intermediate attack step to handle existence."
          },
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "attemptModify"
              }
            ]
          }
        },
        {
          "name": "denyAfterSoftProdVulnerability",
          "meta": {
            "developer": "Intermediate attack step to handle existence."
          },
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "attemptDeny"
              }
            ]
          }
        },
        {
          "name": "attemptApplicationRespondConnectThroughData",
          "meta": {
            "developer": "Intermediate attack step."
          },
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "successfulApplicationRespondConnectThroughData"
              }
            ]
          }
        },
        {
          "name": "successfulApplicationRespondConnectThroughData",
          "meta": {
            "developer": "Intermediate attack step to model defences."
          },
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "applicationRespondConnectThroughData"
              }
            ]
          }
        },
        {
          "name": "applicationRespondConnectThroughData",
          "meta": {
            "user": "After access on the application the contained data or data in transit can be used to attempt a respond connect to the client side application.",
            "modeler": "This is an intermediate attack step that groups connections to attack steps."
          },
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "receivedData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptApplicationRespondConnect"
                }
              }
            ]
          }
        },
        {
          "name": "attemptRead",
          "meta": {
            "developer": "Intermediate attack step."
          },
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "successfulRead"
              }
            ]
          }
        },
        {
          "name": "successfulRead",
          "meta": {
            "developer": "Intermediate attack step to model defences."
          },
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "read"
              }
            ]
          }
        },
        {
          "name": "read",
          "meta": {
            "user": "The attacker can read some or all of this service's code and data.",
            "developer": "We don't model the services data, as we do not expect that information will be available to the parser. We also don't differentiate between service administrators and service users (e.g., mail service admins and users), as we have no information about the services. Adopted from awsLang."
          },
          "type": "or",
          "tags": [
          ],
          "risk": {
            "isConfidentiality": true,
            "isIntegrity": false,
            "isAvailability": false
          },
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "containedData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptRead"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "appExecutedApps"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptRead"
                }
              }
            ]
          }
        },
        {
          "name": "attemptModify",
          "meta": {
            "developer": "Intermediate attack step."
          },
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "successfulModify"
              }
            ]
          }
        },
        {
          "name": "successfulModify",
          "meta": {
            "developer": "Intermediate attack step to model defences."
          },
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "modify"
              }
            ]
          }
        },
        {
          "name": "modify",
          "meta": {
            "user": "The attacker can modify some or all of this service's data and/or source code."
          },
          "type": "or",
          "tags": [
          ],
          "risk": {
            "isConfidentiality": false,
            "isIntegrity": true,
            "isAvailability": false
          },
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "containedData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptAccess"
                }
              },
              {
                "type": "attackStep",
                "name": "fullAccess"
              }
            ]
          }
        },
        {
          "name": "attemptDeny",
          "meta": {
            "developer": "Intermediate attack step."
          },
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "successfulDeny"
              }
            ]
          }
        },
        {
          "name": "successfulDeny",
          "meta": {
            "developer": "Intermediate attack step to model defences."
          },
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "deny"
              }
            ]
          }
        },
        {
          "name": "deny",
          "meta": {
            "user": "The attacker can deny some or all functionality and data pertaining to this application/service as well as executed applications."
          },
          "type": "or",
          "tags": [
          ],
          "risk": {
            "isConfidentiality": false,
            "isIntegrity": false,
            "isAvailability": true
          },
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "containedData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptDeny"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "sentData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptDenyDataInTransitFromApplication"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "appExecutedApps"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptDeny"
                }
              }
            ]
          }
        },
        {
          "name": "denyFromNetworkingAsset",
          "meta": {
            "user": "This is an intermediate attack step to only allow deny on an application when all the connection rules and networks associated with it are denied, because an app can be serving on many different ports."
          },
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "attemptDeny"
              }
            ]
          }
        }
      ]
    },
    {
      "name": "IDPS",
      "meta": {
        "user": "An IDPS is tasked with protecting other applications from malicious activity."
      },
      "category": "ComputeResources",
      "isAbstract": false,
      "superAsset": "Application",
      "variables": [
      ],
      "attackSteps": [
        {
          "name": "effectiveness",
          "meta": {
            "user": "The effectiveness defence represents how capable the IDPS is to prevent disruptions from occurring on the associated applications.",
            "modeller": "The disabled defence should inversely impact the effectiveness defence. However, because this is not currently implemented in coreLang it is up to the modeller to properly take this into account when setting the values of these defences."
          },
          "type": "defense",
          "tags": [
          ],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "Enabled",
            "arguments": [
            ]
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "protectionBypassed"
              }
            ]
          }
        },
        {
          "name": "disabled",
          "meta": {
            "modeller": "As per the comment for the effectiveness defence, the disabled defence does not function as desired for the IDPS asset and should not be used. The effectiveness defence should be adjusted to reflect the likelihood that the IDPS is present instead.",
            "developer": "It would be ideal to hide this defence when using modelling tools to avoid confusion."
          },
          "type": "defense",
          "tags": [
            "Override",
            "hidden"
          ],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "Disabled",
            "arguments": [
            ]
          },
          "requires": null,
          "reaches": null
        },
        {
          "name": "protectionBypassed",
          "meta": {
            "developer": "The protection of the IDPS has been bypassed either as a result of attacker activity or due to some internal property of the IDPS."
          },
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "protectedApps"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "useVulnerability"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "protectedApps"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "unsafeActivityByUser"
                }
              }
            ]
          }
        },
        {
          "name": "fullAccess",
          "meta": {
          },
          "type": "or",
          "tags": [
          ],
          "risk": {
            "isConfidentiality": true,
            "isIntegrity": true,
            "isAvailability": true
          },
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": false,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "protectionBypassed"
              }
            ]
          }
        }
      ]
    },
    {
      "name": "PhysicalZone",
      "meta": {
        "user": "A physical zone is the location where hardware systems are physically deployed."
      },
      "category": "ComputeResources",
      "isAbstract": false,
      "superAsset": null,
      "variables": [
      ],
      "attackSteps": [
        {
          "name": "gainPhysicalAccess",
          "meta": {
            "user": "By gaining access on a physical zone, physical access on the housed hardware is also gained."
          },
          "type": "or",
          "tags": [
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "hardwareSystems"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "physicalAccess"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "networks"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "physicalAccess"
                }
              }
            ]
          }
        }
      ]
    },
    {
      "name": "Information",
      "meta": {
        "user": "Represents any type of information that might be contained inside Data."
      },
      "category": "DataResources",
      "isAbstract": false,
      "superAsset": null,
      "variables": [
      ],
      "attackSteps": [
        {
          "name": "attemptAccess",
          "meta": {
            "user": "The attacker is attempting to access the information."
          },
          "type": "or",
          "tags": [
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": null
        },
        {
          "name": "read",
          "meta": {
            "user": "Reading one replica allows the attacker to read all other replicas as well since the information contained in them is the same."
          },
          "type": "or",
          "tags": [
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "dataReplicas"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "read"
                }
              }
            ]
          }
        },
        {
          "name": "write",
          "meta": {
            "user": "Information can be overwritten only if all replicas have been overwritten."
          },
          "type": "and",
          "tags": [
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": null
        },
        {
          "name": "delete",
          "meta": {
            "user": "Information can be deleted only if all replicas have been deleted."
          },
          "type": "and",
          "tags": [
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": null
        },
        {
          "name": "deny",
          "meta": {
            "user": "Information can be denied only if all replicas have been denied."
          },
          "type": "and",
          "tags": [
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": null
        }
      ]
    },
    {
      "name": "Data",
      "meta": {
        "user": "Any form of data that can be stored or transmitted.",
        "developer": "Adopted from awsLang but significantly changed."
      },
      "category": "DataResources",
      "isAbstract": false,
      "superAsset": null,
      "variables": [
      ],
      "attackSteps": [
        {
          "name": "attemptAccess",
          "meta": {
            "user": "Attempt to access the data, this might fail if the 'dataNotPresent' defense is used."
          },
          "type": "or",
          "tags": [
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "access"
              }
            ]
          }
        },
        {
          "name": "attemptAccessFromIdentity",
          "meta": {
            "user": "Access the data through a compormised identity."
          },
          "type": "or",
          "tags": [
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "identityRead"
              },
              {
                "type": "attackStep",
                "name": "identityWrite"
              },
              {
                "type": "attackStep",
                "name": "identityDelete"
              }
            ]
          }
        },
        {
          "name": "access",
          "meta": {
            "user": "Access the data."
          },
          "type": "and",
          "tags": [
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "attemptRead"
              },
              {
                "type": "attackStep",
                "name": "attemptWrite"
              },
              {
                "type": "attackStep",
                "name": "attemptDelete"
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "containedData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptAccess"
                }
              }
            ]
          }
        },
        {
          "name": "dataEncrypted",
          "meta": {
            "user": "If the data are encrypted then accessing them requires the associated encryption credentials/key.",
            "developer": "Data will be considered as encrypted if there is at least one Credentials instance associated with it. Otherwise, 'accessUnencryptedData' is reached."
          },
          "type": "notExist",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "field",
                "name": "encryptCreds"
              }
            ]
          },
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "accessUnencryptedData"
              }
            ]
          }
        },
        {
          "name": "dataSigned",
          "meta": {
            "user": "If the data are authenticated, then modifying them is not possible to achieve.",
            "developer": "Data will be considered as encrypted if there is at least one Credentials instance associated with it. Otherwise, 'accessUnencryptedData' is reached."
          },
          "type": "notExist",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "field",
                "name": "signingCreds"
              }
            ]
          },
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "accessUnsignedData"
              }
            ]
          }
        },
        {
          "name": "accessUnencryptedData",
          "meta": {
            "user": "If data are unencrypted then access them."
          },
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "accessDecryptedData"
              }
            ]
          }
        },
        {
          "name": "accessUnsignedData",
          "meta": {
            "user": "If data are unsigned then alter them."
          },
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "accessSpoofedData"
              }
            ]
          }
        },
        {
          "name": "accessSpoofedData",
          "meta": {
            "user": "Intermediate attack step to only allow effects of 'accessUnsignedData' on data after compromising the signing credentials or signing is disabled."
          },
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "transitive",
                  "stepExpression": {
                    "type": "field",
                    "name": "containedData"
                  }
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "applicationRespondConnect"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "transitive",
                  "stepExpression": {
                    "type": "field",
                    "name": "containedData"
                  }
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "successfulWrite"
                }
              }
            ]
          }
        },
        {
          "name": "accessDecryptedData",
          "meta": {
            "user": "Intermediate attack step to only allow effects of 'accessUnencryptedData' on data after compromising the encryption credentials or encryption is disabled."
          },
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "access"
              },
              {
                "type": "attackStep",
                "name": "readContainedInformation"
              },
              {
                "type": "attackStep",
                "name": "applicationRespondConnect"
              },
              {
                "type": "attackStep",
                "name": "successfulRead"
              },
              {
                "type": "attackStep",
                "name": "successfulWrite"
              },
              {
                "type": "attackStep",
                "name": "successfulDelete"
              }
            ]
          }
        },
        {
          "name": "dataNotPresent",
          "meta": {
            "user": "It should be used to model the probability of data actually not existing on the connected container (i.e. Hardware, Application, Connection, etc.).",
            "developer": "This attack step is in series with the 'accessUnencryptedData' attack step because there is no reason to defend encrypted data (or deny them) if they do not exist..."
          },
          "type": "defense",
          "tags": [
          ],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "Disabled",
            "arguments": [
            ]
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "access"
              },
              {
                "type": "attackStep",
                "name": "readContainedInformation"
              },
              {
                "type": "attackStep",
                "name": "applicationRespondConnect"
              },
              {
                "type": "attackStep",
                "name": "successfulRead"
              },
              {
                "type": "attackStep",
                "name": "successfulWrite"
              },
              {
                "type": "attackStep",
                "name": "successfulDeny"
              },
              {
                "type": "attackStep",
                "name": "successfulDelete"
              }
            ]
          }
        },
        {
          "name": "readContainedInformation",
          "meta": {
            "user": "From the data, attempt to access also the contained information, if exists."
          },
          "type": "and",
          "tags": [
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "information"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptAccess"
                }
              }
            ]
          }
        },
        {
          "name": "attemptApplicationRespondConnect",
          "meta": {
            "developer": "Intermediate attack step to handle defenses."
          },
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "applicationRespondConnect"
              }
            ]
          }
        },
        {
          "name": "applicationRespondConnect",
          "meta": {
            "user": "If data is manInTheMiddled or the server side application is compromised, then respond connect to the client side application can be done."
          },
          "type": "and",
          "tags": [
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "senderApp"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptNetworkConnectViaResponse"
                }
              }
            ]
          }
        },
        {
          "name": "attemptRead",
          "meta": {
            "user": "Attempt to read the data."
          },
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "successfulRead"
              }
            ]
          }
        },
        {
          "name": "identityAttemptRead",
          "meta": {
            "user": "Attempt to read the data through a compormised identity."
          },
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "identityRead"
              }
            ]
          }
        },
        {
          "name": "identityRead",
          "meta": {
            "developer": "Intermediate attack step to only allow operations on data after both access and identity assume is compromised."
          },
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "attemptRead"
              }
            ]
          }
        },
        {
          "name": "attemptWrite",
          "meta": {
            "user": "Attempt to write on the data."
          },
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "successfulWrite"
              }
            ]
          }
        },
        {
          "name": "identityAttemptWrite",
          "meta": {
            "user": "Attempt to write the data through a compormised identity."
          },
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "identityWrite"
              }
            ]
          }
        },
        {
          "name": "identityWrite",
          "meta": {
            "developer": "Intermediate attack step to only allow operations on data after both access and identity assume is compromised."
          },
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "attemptWrite"
              }
            ]
          }
        },
        {
          "name": "attemptDelete",
          "meta": {
            "user": "Attempt to delete the data."
          },
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "successfulDelete"
              }
            ]
          }
        },
        {
          "name": "identityAttemptDelete",
          "meta": {
            "user": "Attempt to delete the data through a compormised identity."
          },
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "identityDelete"
              }
            ]
          }
        },
        {
          "name": "identityDelete",
          "meta": {
            "developer": "Intermediate attack step to only allow operations on data after both access and identity assume is compromised."
          },
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "attemptDelete"
              }
            ]
          }
        },
        {
          "name": "successfulRead",
          "meta": {
            "developer": "Intermediate attack step to model the requirements."
          },
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "read"
              }
            ]
          }
        },
        {
          "name": "read",
          "meta": {
            "user": "The attacker can read the data. This means that the data can be used for further attack steps, but they are not necessarily obtained by the attacker. The extract attack step covers the scenario where the attacker actually collects the data."
          },
          "type": "or",
          "tags": [
          ],
          "risk": {
            "isConfidentiality": true,
            "isIntegrity": false,
            "isAvailability": false
          },
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "containedData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptRead"
                }
              },
              {
                "type": "attackStep",
                "name": "readContainedInformation"
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "replicatedInformation"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "read"
                }
              },
              {
                "type": "attackStep",
                "name": "extract"
              }
            ]
          }
        },
        {
          "name": "successfulWrite",
          "meta": {
            "developer": "Intermediate attack step to model the requirements."
          },
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "replicatedInformation"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "write"
                }
              },
              {
                "type": "attackStep",
                "name": "write"
              }
            ]
          }
        },
        {
          "name": "write",
          "meta": {
            "user": "The attacker can write to the location of the data, effectively modifying or deleting it."
          },
          "type": "or",
          "tags": [
          ],
          "risk": {
            "isConfidentiality": false,
            "isIntegrity": true,
            "isAvailability": false
          },
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "containedData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptWrite"
                }
              },
              {
                "type": "attackStep",
                "name": "attemptDelete"
              },
              {
                "type": "attackStep",
                "name": "compromiseAppOrigin"
              }
            ]
          }
        },
        {
          "name": "successfulDelete",
          "meta": {
            "developer": "Intermediate attack step to model the requirements."
          },
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "replicatedInformation"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "delete"
                }
              },
              {
                "type": "attackStep",
                "name": "delete"
              }
            ]
          }
        },
        {
          "name": "delete",
          "meta": {
            "user": "The attacker can delete the data."
          },
          "type": "or",
          "tags": [
          ],
          "risk": {
            "isConfidentiality": false,
            "isIntegrity": true,
            "isAvailability": true
          },
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "containedData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptDelete"
                }
              },
              {
                "type": "attackStep",
                "name": "attemptDeny"
              }
            ]
          }
        },
        {
          "name": "attemptDeny",
          "meta": {
            "developer": "Intermediate attack step to only allow deny on data after only if 'dataNotPresent' defense is disabled."
          },
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "successfulDeny"
              }
            ]
          }
        },
        {
          "name": "successfulDeny",
          "meta": {
            "developer": "Intermediate attack step to model the requirements."
          },
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "replicatedInformation"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "deny"
                }
              },
              {
                "type": "attackStep",
                "name": "deny"
              }
            ]
          }
        },
        {
          "name": "deny",
          "meta": {
            "user": "If a DoS is performed data are denied, it has the same effects as deleting the data."
          },
          "type": "or",
          "tags": [
          ],
          "risk": {
            "isConfidentiality": false,
            "isIntegrity": false,
            "isAvailability": true
          },
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "containedData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptDeny"
                }
              }
            ]
          }
        },
        {
          "name": "attemptWriteDataInTransitFromApplication",
          "meta": {
            "developer": "Intermediate attack step to allow data in transit to be written from the Application side."
          },
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "writeDataInTransit"
              }
            ]
          }
        },
        {
          "name": "attemptIdentityWriteDataInTransitFromApplication",
          "meta": {
            "developer": "Intermediate attack step to allow data in transit to be written if the Identity associated is also compromised from the Application side."
          },
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "identityWriteDataInTransit"
              }
            ]
          }
        },
        {
          "name": "attemptWriteDataInTransitFromConnectionRule",
          "meta": {
            "developer": "Intermediate attack step to allow data in transit to be written from the ConnectionRule side."
          },
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "writeDataInTransit"
              },
              {
                "type": "attackStep",
                "name": "identityWriteDataInTransit"
              }
            ]
          }
        },
        {
          "name": "identityWriteDataInTransit",
          "meta": {
            "developer": "For Data in transit to be witten via an Application they have to be reachable from an outgoing ConnectionRule as well."
          },
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": {
            "isConfidentiality": true,
            "isIntegrity": true,
            "isAvailability": false
          },
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "identityAttemptWrite"
              }
            ]
          }
        },
        {
          "name": "writeDataInTransit",
          "meta": {
            "developer": "For Data in transit to be witten via an Application they have to be reachable from an outgoing ConnectionRule as well."
          },
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": {
            "isConfidentiality": true,
            "isIntegrity": true,
            "isAvailability": false
          },
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "attemptWrite"
              }
            ]
          }
        },
        {
          "name": "attemptDenyDataInTransitFromApplication",
          "meta": {
            "developer": "Intermediate attack step to allow data in transit to be denied from the Application side."
          },
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "denyDataInTransit"
              }
            ]
          }
        },
        {
          "name": "attemptDenyDataInTransitFromConnectionRule",
          "meta": {
            "developer": "Intermediate attack step to allow data in transit to be denied from the ConnectionRule side."
          },
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "denyDataInTransit"
              }
            ]
          }
        },
        {
          "name": "denyDataInTransit",
          "meta": {
            "developer": "For Data in transit to be denied via an Application they have to be reachable from an outgoing ConnectionRule as well."
          },
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": {
            "isConfidentiality": true,
            "isIntegrity": true,
            "isAvailability": false
          },
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "attemptDeny"
              }
            ]
          }
        },
        {
          "name": "attemptReverseReach",
          "meta": {
            "developer": "Intermediate attack step."
          },
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "reverseReach"
              }
            ]
          }
        },
        {
          "name": "reverseReach",
          "meta": {
            "developer": "Reverse reach for Data is used to determine whether or not the data can be transferred to attacker."
          },
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "extract"
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "containedData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptReverseReach"
                }
              }
            ]
          }
        },
        {
          "name": "extract",
          "meta": {
            "user": "The attacker can extract the data. The read attack step represents just being able to make use of the data for further attack steps without the attacker obtaining it."
          },
          "type": "and",
          "tags": [
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "information"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "read"
                }
              }
            ]
          }
        },
        {
          "name": "compromiseAppOrigin",
          "meta": {
            "user": "If origin data are modified/written then the software product is also compromised which effectively also compromises the application."
          },
          "type": "or",
          "tags": [
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "originSoftwareProduct"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "compromiseApplication"
                }
              }
            ]
          }
        }
      ]
    },
    {
      "name": "IAMObject",
      "meta": {
        "user": "An IAM object represents the base logic shared by all assets used for Identity and Access Management roles(Identity, Group, Privileges)."
      },
      "category": "IAM",
      "isAbstract": true,
      "superAsset": null,
      "variables": [
      ],
      "attackSteps": [
        {
          "name": "disabled",
          "meta": {
            "user": "It should be used to model the probability that the IAM object does not actually exist."
          },
          "type": "defense",
          "tags": [
          ],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "Disabled",
            "arguments": [
            ]
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "successfulAssume"
              }
            ]
          }
        },
        {
          "name": "attemptAssume",
          "meta": {
            "user": "Attempt to assume the privileges associated with the IAM object. If disabled this will not be possible."
          },
          "type": "or",
          "tags": [
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "successfulAssume"
              }
            ]
          }
        },
        {
          "name": "successfulAssume",
          "meta": {
            "developer": "Intermediate attack step to model the requirements for the assume attack step."
          },
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "assume"
              }
            ]
          }
        },
        {
          "name": "assume",
          "meta": {
            "user": "When an attacker is able to assume an IAM asset the privileges associated with it can always be exploited, other behaviour is asset specific."
          },
          "type": "or",
          "tags": [
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "execPrivApps"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "authenticate"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "highPrivApps"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "authenticate"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "lowPrivApps"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "specificAccessAuthenticate"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "readPrivData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "identityAttemptRead"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "writePrivData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "identityAttemptWrite"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "deletePrivData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "identityAttemptDelete"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "managedIAMs"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptAssume"
                }
              }
            ]
          }
        }
      ]
    },
    {
      "name": "Identity",
      "meta": {
        "user": "An identity models an IAM identity that should then be associated with privileges on other instances.",
        "developer": "An identity can be visualised as a group of assumable roles that can be associated with many credentials."
      },
      "category": "IAM",
      "isAbstract": false,
      "superAsset": "IAMObject",
      "variables": [
      ],
      "attackSteps": [
        {
          "name": "assume",
          "meta": {
            "user": "After authentication or compromise of an account/identity, assume its privileges.",
            "developer": "This is both legitimate and illegitimate access! Also assume all the privileges of the parent identities (on the above level/inherited by this identity) because those represent the group of (inherited) roles."
          },
          "type": "or",
          "tags": [
            "Override"
          ],
          "risk": {
            "isConfidentiality": true,
            "isIntegrity": true,
            "isAvailability": true
          },
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": false,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "parentId"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptAssume"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "memberOf"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptAssume"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "identityPrivileges"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptAssume"
                }
              }
            ]
          }
        }
      ]
    },
    {
      "name": "Privileges",
      "meta": {
        "user": "A privileges asset can be associated with an identity to group a set of given privileges on Applications and Data."
      },
      "category": "IAM",
      "isAbstract": false,
      "superAsset": "IAMObject",
      "variables": [
      ],
      "attackSteps": [
        {
          "name": "assume",
          "meta": {
            "user": "After authentication or compromise of an account/identity, assume its privileges.",
            "developer": "Assume identity/group the privileges are associated with since the privileges are simply an extension of it."
          },
          "type": "or",
          "tags": [
            "Override"
          ],
          "risk": {
            "isConfidentiality": true,
            "isIntegrity": true,
            "isAvailability": true
          },
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": false,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "privilegeIdentities"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptAssume"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "privilegeGroups"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptAssume"
                }
              }
            ]
          }
        }
      ]
    },
    {
      "name": "Group",
      "meta": {
        "user": "A group is a way to group together identities and/or groups. This allows the expression of hierarchical IAM (structured inheritance).",
        "modeler": "Groups can be used instead of nested identities to make the model more intuitive and clearer to understand."
      },
      "category": "IAM",
      "isAbstract": false,
      "superAsset": "IAMObject",
      "variables": [
      ],
      "attackSteps": [
        {
          "name": "assume",
          "meta": {
            "user": "If an identity of a group is compromised then the whole group (i.e. all other privileges of the group) should be considered as compromised. Furthermore, the parent groups should also be considered compromised.",
            "developer": "The parent groups should be compromised because all the privileges of the parent groups are inherited on the children groups but lower children groups should not be compromised because lower levels might have inherited plus additional privileges."
          },
          "type": "or",
          "tags": [
            "Override"
          ],
          "risk": {
            "isConfidentiality": true,
            "isIntegrity": true,
            "isAvailability": true
          },
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": false,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "parentGroup"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptAssume"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "groupPrivileges"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptAssume"
                }
              }
            ]
          }
        }
      ]
    },
    {
      "name": "Credentials",
      "meta": {
        "user": "Credentials can be used to get access to an Identity, but they can also be used as an encryption/signing key for Data.",
        "modeler": "Credentials represent a variety of access control mechanism(e.g. username and password pair, keycards, biometric data)."
      },
      "category": "IAM",
      "isAbstract": false,
      "superAsset": "Information",
      "variables": [
      ],
      "attackSteps": [
        {
          "name": "notDisclosed",
          "meta": {
            "user": "Describes the case where the password/credential is leaked to some location, it can then be available to the attacker."
          },
          "type": "defense",
          "tags": [
          ],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "Enabled",
            "arguments": [
            ]
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "useLeakedCredentials"
              }
            ]
          }
        },
        {
          "name": "notGuessable",
          "meta": {
            "user": "Describes if the credentials can be guessed by the attacker(e. g. they represent a password or passphrase)."
          },
          "type": "defense",
          "tags": [
          ],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "Enabled",
            "arguments": [
            ]
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "guessCredentials"
              }
            ]
          }
        },
        {
          "name": "unique",
          "meta": {
            "user": "Describes if the credentials are known to be unique and therefore cannot be used in a credentials reuse attack."
          },
          "type": "defense",
          "tags": [
          ],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "Enabled",
            "arguments": [
            ]
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "credentialsReuse"
              },
              {
                "type": "attackStep",
                "name": "propagateOneCredentialCompromised"
              }
            ]
          }
        },
        {
          "name": "notPhishable",
          "meta": {
            "user": "Describes if the credentials cannot be phished(they are biometric, e. g. fingerprints or iris scans, or physical, e. g. access cards or keys, elements)."
          },
          "type": "defense",
          "tags": [
          ],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "Disabled",
            "arguments": [
            ]
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "credentialTheft"
              }
            ]
          }
        },
        {
          "name": "read",
          "meta": {
            "developer": "If the attacker is able to read the information containing credentials we assume that they are compromised."
          },
          "type": "or",
          "tags": [
            "Override"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": false,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "attemptUse"
              }
            ]
          }
        },
        {
          "name": "useLeakedCredentials",
          "meta": {
            "user": "If the password/credential is leaked to some location, it can then be available to the attacker and therefore it can be used."
          },
          "type": "or",
          "tags": [
          ],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "EasyAndCertain",
            "arguments": [
            ]
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "attemptUse"
              }
            ]
          }
        },
        {
          "name": "attemptCredentialsReuse",
          "meta": {
            "developer": "Intermediate step used to trigger the reuse attack step on other credentials belonging to the same user."
          },
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "credentialsReuse"
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "requiredFactors"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptCredentialsReuse"
                }
              }
            ]
          }
        },
        {
          "name": "credentialsReuse",
          "meta": {
            "developer": "The user is reusing credentials which means that the attacker is able to compromise all of the non-unique credentials associated with this user."
          },
          "type": "and",
          "tags": [
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "attemptUse"
              }
            ]
          }
        },
        {
          "name": "attemptUse",
          "meta": {
            "user": "Someone is using the credentials to perform a legitimate authentication."
          },
          "type": "or",
          "tags": [
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "use"
              }
            ]
          }
        },
        {
          "name": "use",
          "meta": {
            "user": "Someone is using the credentials to perform a legitimate authentication."
          },
          "type": "and",
          "tags": [
          ],
          "risk": {
            "isConfidentiality": true,
            "isIntegrity": false,
            "isAvailability": false
          },
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "identities"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptAssume"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "encryptedData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "accessDecryptedData"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "signedData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "accessSpoofedData"
                }
              },
              {
                "type": "attackStep",
                "name": "attemptPropagateOneCredentialCompromised"
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "credentials"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "use"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "hashes"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptUse"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "origCreds"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "guessCredentialsFromHash"
                }
              }
            ]
          }
        },
        {
          "name": "attemptPropagateOneCredentialCompromised",
          "meta": {
            "developer": "Intermediate step used to propagate the credentials reuse attack step."
          },
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "propagateOneCredentialCompromised"
              }
            ]
          }
        },
        {
          "name": "propagateOneCredentialCompromised",
          "meta": {
            "developer": "Intermediate step used to propagate the credentials reuse attack step."
          },
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "collect",
                  "lhs": {
                    "type": "collect",
                    "lhs": {
                      "type": "transitive",
                      "stepExpression": {
                        "type": "field",
                        "name": "credentials"
                      }
                    },
                    "rhs": {
                      "type": "field",
                      "name": "identities"
                    }
                  },
                  "rhs": {
                    "type": "field",
                    "name": "users"
                  }
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "oneCredentialCompromised"
                }
              }
            ]
          }
        },
        {
          "name": "attemptAccess",
          "meta": {
            "user": "The attacker is attempting to access the credentials."
          },
          "type": "or",
          "tags": [
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "attemptUse"
              }
            ]
          }
        },
        {
          "name": "attemptCredentialTheft",
          "meta": {
            "developer": "Intermediate step used to trigger the credential theft attack step."
          },
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "credentialTheft"
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "requiredFactors"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptCredentialTheft"
                }
              }
            ]
          }
        },
        {
          "name": "credentialTheft",
          "meta": {
            "user": "The attacker is able to steal the credentials."
          },
          "type": "and",
          "tags": [
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "attemptUse"
              }
            ]
          }
        },
        {
          "name": "weakCredentials",
          "meta": {
            "developer": "Intermediate step used to represent how weak the credentials the user employs are. This is inversely related to the securityAwareness defence on the User asset."
          },
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "guessCredentials"
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "requiredFactors"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "weakCredentials"
                }
              }
            ]
          }
        },
        {
          "name": "credsHashed",
          "meta": {
            "developer": "If there are no associated hashes the assumption is that the credentials are guessable without any additional requirements."
          },
          "type": "notExist",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "field",
                "name": "hashes"
              }
            ]
          },
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "guessCredentialsFromHash"
              }
            ]
          }
        },
        {
          "name": "guessCredentialsFromHash",
          "meta": {
            "developer": "If hashes are associated with this Credentials asset the assumption is that one of those hashes is required by the attacker to be able to perform a guessing attack."
          },
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "guessCredentials"
              }
            ]
          }
        },
        {
          "name": "guessCredentials",
          "meta": {
            "user": "The attacker can attempt to just guess a set of credentials. The likelihood of succeeding is depend on how strong the credentials are.",
            "developer": "We should research the probability we want to use for this attack step more."
          },
          "type": "and",
          "tags": [
          ],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "HardAndUncertain",
            "arguments": [
            ]
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "attemptUse"
              }
            ]
          }
        }
      ]
    },
    {
      "name": "User",
      "meta": {
        "user": "This asset represents the user himself. It is the suitable attack surface for social engineering attacks!"
      },
      "category": "User",
      "isAbstract": false,
      "superAsset": null,
      "variables": [
      ],
      "attackSteps": [
        {
          "name": "noPasswordReuse",
          "meta": {
            "user": "If one credential of that user is compromised there is a probability that all other credentials of that user are also compromised."
          },
          "type": "defense",
          "tags": [
          ],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "Enabled",
            "arguments": [
            ]
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "passwordReuseCompromise"
              }
            ]
          }
        },
        {
          "name": "securityAwareness",
          "meta": {
            "user": "The security awareness of the user makes it less likely that social engineering would be successful and reduces the likelihood that the user will engage in unsafe behaviour."
          },
          "type": "defense",
          "tags": [
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "socialEngineering"
              },
              {
                "type": "attackStep",
                "name": "unsafeUserActivity"
              },
              {
                "type": "attackStep",
                "name": "weakCredentials"
              },
              {
                "type": "attackStep",
                "name": "deliverMaliciousRemovableMedia"
              }
            ]
          }
        },
        {
          "name": "oneCredentialCompromised",
          "meta": {
            "developer": "This intermediate attack step is needed in order to block passwordReuseCompromise when no other credential is first compromised."
          },
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "passwordReuseCompromise"
              }
            ]
          }
        },
        {
          "name": "passwordReuseCompromise",
          "meta": {
            "user": "If one reused credential of that user is compromised then, all other credentials of that user can also be compromised."
          },
          "type": "and",
          "tags": [
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "collect",
                  "lhs": {
                    "type": "field",
                    "name": "userIds"
                  },
                  "rhs": {
                    "type": "field",
                    "name": "credentials"
                  }
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptCredentialsReuse"
                }
              }
            ]
          }
        },
        {
          "name": "weakCredentials",
          "meta": {
            "user": "Intermediate attack step that defines the strength of all of the Credentials associated with the user. This is inversely proportional with the user's securityAwareness defence."
          },
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "collect",
                  "lhs": {
                    "type": "field",
                    "name": "userIds"
                  },
                  "rhs": {
                    "type": "field",
                    "name": "credentials"
                  }
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "weakCredentials"
                }
              }
            ]
          }
        },
        {
          "name": "attemptSocialEngineering",
          "meta": {
            "user": "Intermediate attack step that allows for security awareness to reduce the impact of social engineering operations."
          },
          "type": "or",
          "tags": [
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "socialEngineering"
              }
            ]
          }
        },
        {
          "name": "socialEngineering",
          "meta": {
            "user": "An attacker can try to perform social engineering techniques such as phishing.",
            "developer": "In the future, other social engineering techniques should be connected to this attack step."
          },
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "phishUser"
              },
              {
                "type": "attackStep",
                "name": "unsafeUserActivity"
              }
            ]
          }
        },
        {
          "name": "attemptDeliverMaliciousRemovableMedia",
          "meta": {
            "user": "Intermediate attack step that allows for security awareness to reduce the impact of delivering malicious removable media."
          },
          "type": "or",
          "tags": [
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "deliverMaliciousRemovableMedia"
              }
            ]
          }
        },
        {
          "name": "deliverMaliciousRemovableMedia",
          "meta": {
            "user": "An attacker can try to deliver a removable media drive(e.g. USB drive) containing malicious code to a location accessible to the target users.",
            "developer": "The probability distribution is entirely arbitrary and should be researched in greater detail."
          },
          "type": "and",
          "tags": [
          ],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "Exponential",
            "arguments": [
              0.01
            ]
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "userIds"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptAssume"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "collect",
                  "lhs": {
                    "type": "field",
                    "name": "physicalZones"
                  },
                  "rhs": {
                    "type": "field",
                    "name": "hardwareSystems"
                  }
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptUnsafeUserActivity"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "hardwareSystems"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptUnsafeUserActivity"
                }
              }
            ]
          }
        },
        {
          "name": "phishUser",
          "meta": {
            "user": "The attacker can phish the user to gain access to their credentials."
          },
          "type": "or",
          "tags": [
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "attemptCredentialTheft"
              }
            ]
          }
        },
        {
          "name": "attemptCredentialTheft",
          "meta": {
            "user": "Trick the user to provide his/her credentials."
          },
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "credentialTheft"
              }
            ]
          }
        },
        {
          "name": "credentialTheft",
          "meta": {
            "modeler": "Distribution: Bernoulli(0.5) * Exponential(0.1), source: Sommestad (2011) Password authentication attacks: a survey of attacks and when they will succeed, suggest to use Bernoulli(0.05)",
            "developer": "This attack is hard to happen."
          },
          "type": "or",
          "tags": [
          ],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "HardAndUncertain",
            "arguments": [
            ]
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "collect",
                  "lhs": {
                    "type": "field",
                    "name": "userIds"
                  },
                  "rhs": {
                    "type": "field",
                    "name": "credentials"
                  }
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptCredentialTheft"
                }
              }
            ]
          }
        },
        {
          "name": "unsafeUserActivity",
          "meta": {
            "modeler": "An attacker may trigger the assume step on identities belonging to the user without being able to reach (or be reached) via any of the Applications that the identity has access to. This represents an unmaterialised threat in that scenario. The choice of probability is entirely arbitrary and should be replaced with a scientifically grounded distribution.",
            "developer": "The user can engage in unsafe behaviour that could allow the attacker to gain access to the applications the user has access to."
          },
          "type": "and",
          "tags": [
          ],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "Exponential",
            "arguments": [
              0.03
            ]
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "userIds"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptAssume"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "collect",
                  "lhs": {
                    "type": "field",
                    "name": "userIds"
                  },
                  "rhs": {
                    "type": "field",
                    "name": "execPrivApps"
                  }
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptUnsafeUserActivity"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "collect",
                  "lhs": {
                    "type": "collect",
                    "lhs": {
                      "type": "field",
                      "name": "userIds"
                    },
                    "rhs": {
                      "type": "field",
                      "name": "identityPrivileges"
                    }
                  },
                  "rhs": {
                    "type": "field",
                    "name": "execPrivApps"
                  }
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptUnsafeUserActivity"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "collect",
                  "lhs": {
                    "type": "field",
                    "name": "userIds"
                  },
                  "rhs": {
                    "type": "field",
                    "name": "highPrivApps"
                  }
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptUnsafeUserActivity"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "collect",
                  "lhs": {
                    "type": "collect",
                    "lhs": {
                      "type": "field",
                      "name": "userIds"
                    },
                    "rhs": {
                      "type": "field",
                      "name": "identityPrivileges"
                    }
                  },
                  "rhs": {
                    "type": "field",
                    "name": "highPrivApps"
                  }
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptUnsafeUserActivity"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "collect",
                  "lhs": {
                    "type": "field",
                    "name": "userIds"
                  },
                  "rhs": {
                    "type": "field",
                    "name": "lowPrivApps"
                  }
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptUnsafeUserActivity"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "collect",
                  "lhs": {
                    "type": "collect",
                    "lhs": {
                      "type": "field",
                      "name": "userIds"
                    },
                    "rhs": {
                      "type": "field",
                      "name": "identityPrivileges"
                    }
                  },
                  "rhs": {
                    "type": "field",
                    "name": "lowPrivApps"
                  }
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptUnsafeUserActivity"
                }
              }
            ]
          }
        }
      ]
    },
    {
      "name": "Network",
      "meta": {
        "user": "A network (zone) is a set of network accessible applications and data.",
        "developer": "The network asset tries to cover all the levels of the OSI stack in a very abstract and compact way (i.e. it tries to represent all the OSI layers). For example it will try to cover both ARP attacks (that are Level 2) but also DNS/HTTP spoofing attacks (that are Level 7)."
      },
      "category": "Networking",
      "isAbstract": false,
      "superAsset": null,
      "variables": [
        {
          "name": "allNetApplications",
          "stepExpression": {
            "type": "union",
            "lhs": {
              "type": "field",
              "name": "clientApplications"
            },
            "rhs": {
              "type": "field",
              "name": "applications"
            }
          }
        },
        {
          "name": "allowedNetworkConnections",
          "stepExpression": {
            "type": "union",
            "lhs": {
              "type": "field",
              "name": "netConnections"
            },
            "rhs": {
              "type": "field",
              "name": "outgoingNetConnections"
            }
          }
        },
        {
          "name": "allowedApplicationConnections",
          "stepExpression": {
            "type": "union",
            "lhs": {
              "type": "field",
              "name": "netConnections"
            },
            "rhs": {
              "type": "field",
              "name": "outgoingNetConnections"
            }
          }
        },
        {
          "name": "allNetConnections",
          "stepExpression": {
            "type": "union",
            "lhs": {
              "type": "union",
              "lhs": {
                "type": "union",
                "lhs": {
                  "type": "field",
                  "name": "netConnections"
                },
                "rhs": {
                  "type": "field",
                  "name": "ingoingNetConnections"
                }
              },
              "rhs": {
                "type": "field",
                "name": "outgoingNetConnections"
              }
            },
            "rhs": {
              "type": "field",
              "name": "diodeIngoingNetConnections"
            }
          }
        },
        {
          "name": "allowedApplicationConnectionsApplications",
          "stepExpression": {
            "type": "union",
            "lhs": {
              "type": "variable",
              "name": "allNetApplications"
            },
            "rhs": {
              "type": "collect",
              "lhs": {
                "type": "variable",
                "name": "allNetConnections"
              },
              "rhs": {
                "type": "field",
                "name": "applications"
              }
            }
          }
        }
      ],
      "attackSteps": [
        {
          "name": "physicalAccess",
          "meta": {
            "developer": "Attacker has physical access on the network. This means he can cut wires/fibers, connect using iLOs, eavesdrop and get proper network access."
          },
          "type": "or",
          "tags": [
          ],
          "risk": {
            "isConfidentiality": true,
            "isIntegrity": false,
            "isAvailability": true
          },
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "denialOfService"
              },
              {
                "type": "attackStep",
                "name": "eavesdropAfterPhysicalAccess"
              },
              {
                "type": "attackStep",
                "name": "attemptAccess"
              },
              {
                "type": "attackStep",
                "name": "bypassAccessControl"
              }
            ]
          }
        },
        {
          "name": "networkAccessControl",
          "meta": {
            "user": "Access control protects from unauthorized physical access on the network."
          },
          "type": "defense",
          "tags": [
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "eavesdropAfterPhysicalAccess"
              },
              {
                "type": "attackStep",
                "name": "attemptAccess"
              }
            ]
          }
        },
        {
          "name": "bypassAccessControl",
          "meta": {
            "user": "If access control is enabled, the attacker can still try to bypass it and gain access on the network."
          },
          "type": "or",
          "tags": [
          ],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "VeryHardAndUncertain",
            "arguments": [
            ]
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "successfulAccess"
              }
            ]
          }
        },
        {
          "name": "attemptAccess",
          "meta": {
            "user": "Access on a Network can be atempted after physicalAccess."
          },
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "access"
              }
            ]
          }
        },
        {
          "name": "access",
          "meta": {
            "user": "Access provides connect to all reachable applications."
          },
          "type": "or",
          "tags": [
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "successfulAccess"
              }
            ]
          }
        },
        {
          "name": "successfulAccess",
          "meta": {
            "developer": "This is an intermediate attack step to prevent repeating code."
          },
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "variable",
                  "name": "allowedApplicationConnections"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptConnectToApplications"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "applications"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "networkConnect"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "clientApplications"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptNetworkConnectViaResponse"
                }
              },
              {
                "type": "attackStep",
                "name": "accessNetworkData"
              },
              {
                "type": "attackStep",
                "name": "networkForwarding"
              },
              {
                "type": "attackStep",
                "name": "denialOfService"
              },
              {
                "type": "attackStep",
                "name": "attemptReverseReach"
              }
            ]
          }
        },
        {
          "name": "attemptReverseReach",
          "meta": {
            "developer": "Intermediate attack step."
          },
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "reverseReach"
              }
            ]
          }
        },
        {
          "name": "reverseReach",
          "meta": {
            "developer": "Reverse reach is used to determine whether or not the attacker can be reached by the user."
          },
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "union",
                  "lhs": {
                    "type": "union",
                    "lhs": {
                      "type": "field",
                      "name": "netConnections"
                    },
                    "rhs": {
                      "type": "field",
                      "name": "ingoingNetConnections"
                    }
                  },
                  "rhs": {
                    "type": "field",
                    "name": "diodeIngoingNetConnections"
                  }
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptReverseReach"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "clientApplications"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptReverseReach"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "applications"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptReverseReach"
                }
              }
            ]
          }
        },
        {
          "name": "networkForwarding",
          "meta": {
            "developer": "By using the allowed connections (connection rules), forwarding from one network to another network or applications can happen."
          },
          "type": "or",
          "tags": [
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "variable",
                  "name": "allowedNetworkConnections"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptAccessNetworks"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "variable",
                  "name": "allowedNetworkConnections"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptConnectToApplications"
                }
              }
            ]
          }
        },
        {
          "name": "denialOfService",
          "meta": {
            "user": "If a DoS is performed it affects, the applications communicating over the network as well as the connected application."
          },
          "type": "or",
          "tags": [
          ],
          "risk": {
            "isConfidentiality": false,
            "isIntegrity": false,
            "isAvailability": true
          },
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "variable",
                  "name": "allNetConnections"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptDenialOfService"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "variable",
                  "name": "allowedApplicationConnectionsApplications"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "denyFromNetworkingAsset"
                }
              }
            ]
          }
        },
        {
          "name": "accessNetworkData",
          "meta": {
            "user": "Access also the data that are network-wide available."
          },
          "type": "or",
          "tags": [
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "eavesdrop"
              },
              {
                "type": "attackStep",
                "name": "bypassEavesdropProtection"
              },
              {
                "type": "attackStep",
                "name": "manInTheMiddle"
              },
              {
                "type": "attackStep",
                "name": "bypassMitMProtection"
              }
            ]
          }
        },
        {
          "name": "eavesdropDefense",
          "meta": {
            "user": "This defense protects from eavesdrop attacks. If this defense is disabled, then it is equivalent to the network being considered a broadcast network.",
            "modeler": "If this defense is enabled, attacks such as ARP spoofing should however, still be possible. This can be done by assigning a Bernoulli distribution to this defense."
          },
          "type": "defense",
          "tags": [
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "eavesdrop"
              },
              {
                "type": "attackStep",
                "name": "eavesdropAfterPhysicalAccess"
              }
            ]
          }
        },
        {
          "name": "manInTheMiddleDefense",
          "meta": {
            "user": "This defense protects against man-in-the-middle (MitM) attacks that are originating either form the network layer (like ARP spoofing) or by manipulating the higher network layers (like DNS poisoning)."
          },
          "type": "defense",
          "tags": [
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "manInTheMiddle"
              }
            ]
          }
        },
        {
          "name": "eavesdrop",
          "meta": {
            "user": "An attacker that performs an eavesdrop attack on a network tries to access all the transfered data over that network."
          },
          "type": "and",
          "tags": [
          ],
          "risk": {
            "isConfidentiality": true,
            "isIntegrity": false,
            "isAvailability": false
          },
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "successfulEavesdrop"
              }
            ]
          }
        },
        {
          "name": "bypassEavesdropProtection",
          "meta": {
            "user": "The eavesdrop protection can be bypassesed."
          },
          "type": "or",
          "tags": [
          ],
          "risk": {
            "isConfidentiality": true,
            "isIntegrity": false,
            "isAvailability": false
          },
          "ttc": {
            "type": "function",
            "name": "HardAndUncertain",
            "arguments": [
            ]
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "successfulEavesdrop"
              }
            ]
          }
        },
        {
          "name": "successfulEavesdrop",
          "meta": {
            "developer": "This is an intermediate attack step to prevent repeating code."
          },
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "transitData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptRead"
                }
              }
            ]
          }
        },
        {
          "name": "manInTheMiddle",
          "meta": {
            "user": "An attacker that performs a MitM attack on a network tries to read and modify all the transfered data over that network."
          },
          "type": "and",
          "tags": [
          ],
          "risk": {
            "isConfidentiality": true,
            "isIntegrity": true,
            "isAvailability": false
          },
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "successfulManInTheMiddle"
              }
            ]
          }
        },
        {
          "name": "bypassMitMProtection",
          "meta": {
            "user": "The MitM protection can be bypassesed."
          },
          "type": "or",
          "tags": [
          ],
          "risk": {
            "isConfidentiality": true,
            "isIntegrity": true,
            "isAvailability": false
          },
          "ttc": {
            "type": "function",
            "name": "HardAndUncertain",
            "arguments": [
            ]
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "successfulManInTheMiddle"
              }
            ]
          }
        },
        {
          "name": "successfulManInTheMiddle",
          "meta": {
            "developer": "This is an intermediate attack step to prevent repeating code."
          },
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "transitData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptRead"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "transitData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptWrite"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "transitData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptApplicationRespondConnect"
                }
              }
            ]
          }
        },
        {
          "name": "eavesdropAfterPhysicalAccess",
          "meta": {
            "user": "If a network is not a switching network and the attacker has physical access on it, eavesdrop can happen."
          },
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": {
            "isConfidentiality": true,
            "isIntegrity": false,
            "isAvailability": false
          },
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "successfulEavesdrop"
              }
            ]
          }
        }
      ]
    },
    {
      "name": "RoutingFirewall",
      "meta": {
        "user": "A routing firewall specifies a router with firewall capabilities that connects many networks."
      },
      "category": "Networking",
      "isAbstract": false,
      "superAsset": "Application",
      "variables": [
      ],
      "attackSteps": [
        {
          "name": "denialOfService",
          "meta": {
            "user": "A DoS attack should cascade on the connected networks and associated connections"
          },
          "type": "or",
          "tags": [
          ],
          "risk": {
            "isConfidentiality": false,
            "isIntegrity": false,
            "isAvailability": true
          },
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "connectionRules"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptDenialOfService"
                }
              }
            ]
          }
        },
        {
          "name": "fullAccess",
          "meta": {
            "developer": "If full access is achieved on RoutingFirewall then it is 0wned and all connections can be allowed! This can happen by compromising the manager application."
          },
          "type": "or",
          "tags": [
          ],
          "risk": {
            "isConfidentiality": false,
            "isIntegrity": true,
            "isAvailability": true
          },
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": false,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "union",
                  "lhs": {
                    "type": "union",
                    "lhs": {
                      "type": "union",
                      "lhs": {
                        "type": "collect",
                        "lhs": {
                          "type": "field",
                          "name": "connectionRules"
                        },
                        "rhs": {
                          "type": "field",
                          "name": "networks"
                        }
                      },
                      "rhs": {
                        "type": "collect",
                        "lhs": {
                          "type": "field",
                          "name": "connectionRules"
                        },
                        "rhs": {
                          "type": "field",
                          "name": "outNetworks"
                        }
                      }
                    },
                    "rhs": {
                      "type": "collect",
                      "lhs": {
                        "type": "field",
                        "name": "connectionRules"
                      },
                      "rhs": {
                        "type": "field",
                        "name": "inNetworks"
                      }
                    }
                  },
                  "rhs": {
                    "type": "collect",
                    "lhs": {
                      "type": "field",
                      "name": "connectionRules"
                    },
                    "rhs": {
                      "type": "field",
                      "name": "diodeInNetworks"
                    }
                  }
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "access"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "collect",
                  "lhs": {
                    "type": "field",
                    "name": "connectionRules"
                  },
                  "rhs": {
                    "type": "field",
                    "name": "applications"
                  }
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "networkConnect"
                }
              }
            ]
          }
        }
      ]
    },
    {
      "name": "ConnectionRule",
      "meta": {
        "user": "This asset is used to model firewall rules between Applications and/or Networks. The association selected (bi/uni-directional) only describes the connection initiation.",
        "developer": "This asset is mainly used to model the functionality of a network connection through a firewall. If Data is added, then it also models the data in transit."
      },
      "category": "Networking",
      "isAbstract": false,
      "superAsset": null,
      "variables": [
        {
          "name": "allApplications",
          "stepExpression": {
            "type": "union",
            "lhs": {
              "type": "union",
              "lhs": {
                "type": "field",
                "name": "applications"
              },
              "rhs": {
                "type": "field",
                "name": "inApplications"
              }
            },
            "rhs": {
              "type": "field",
              "name": "outApplications"
            }
          }
        },
        {
          "name": "clientApplications",
          "stepExpression": {
            "type": "union",
            "lhs": {
              "type": "field",
              "name": "applications"
            },
            "rhs": {
              "type": "field",
              "name": "outApplications"
            }
          }
        },
        {
          "name": "serverApplications",
          "stepExpression": {
            "type": "union",
            "lhs": {
              "type": "field",
              "name": "applications"
            },
            "rhs": {
              "type": "field",
              "name": "inApplications"
            }
          }
        }
      ],
      "attackSteps": [
        {
          "name": "restricted",
          "meta": {
            "user": "The restricted defence can be used to probabilistically model the likelihood of both the protocols required by the attack being enabled or the existence of the ConnectionRule altogether."
          },
          "type": "defense",
          "tags": [
          ],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "Disabled",
            "arguments": [
            ]
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "accessNetworks"
              },
              {
                "type": "attackStep",
                "name": "connectToApplications"
              },
              {
                "type": "attackStep",
                "name": "connectToApplicationsWithoutTriggeringVulnerabilities"
              },
              {
                "type": "attackStep",
                "name": "denialOfService"
              },
              {
                "type": "attackStep",
                "name": "allowWriteDataInTransit"
              },
              {
                "type": "attackStep",
                "name": "allowDenyDataInTransit"
              },
              {
                "type": "attackStep",
                "name": "reverseReach"
              }
            ]
          }
        },
        {
          "name": "payloadInspection",
          "meta": {
            "user": "If enabled, then the traffic is considered to be inspected and filtered by an IDPS that can detect and stop malicious payloads, effectively allowing only legitimate communication(i. e. network-level vulnerabilities cannot be exploited)."
          },
          "type": "defense",
          "tags": [
          ],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "Disabled",
            "arguments": [
            ]
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "connectToApplications"
              },
              {
                "type": "attackStep",
                "name": "reverseReach"
              }
            ]
          }
        },
        {
          "name": "attemptReverseReach",
          "meta": {
            "developer": "Intermediate attack step."
          },
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "reverseReach"
              }
            ]
          }
        },
        {
          "name": "reverseReach",
          "meta": {
            "developer": "Reverse reach is used to determine whether or not the attacker can be reached by the user."
          },
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "variable",
                  "name": "clientApplications"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptReverseReach"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "union",
                  "lhs": {
                    "type": "field",
                    "name": "networks"
                  },
                  "rhs": {
                    "type": "field",
                    "name": "outNetworks"
                  }
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptReverseReach"
                }
              }
            ]
          }
        },
        {
          "name": "attemptAccessNetworks",
          "meta": {
            "developer": "Intermediate attack step."
          },
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "accessNetworks"
              }
            ]
          }
        },
        {
          "name": "accessNetworks",
          "meta": {
            "developer": "Access all networks that are associated with this ConnectionRule."
          },
          "type": "and",
          "tags": [
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "union",
                  "lhs": {
                    "type": "union",
                    "lhs": {
                      "type": "field",
                      "name": "networks"
                    },
                    "rhs": {
                      "type": "field",
                      "name": "inNetworks"
                    }
                  },
                  "rhs": {
                    "type": "field",
                    "name": "diodeInNetworks"
                  }
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "access"
                }
              }
            ]
          }
        },
        {
          "name": "attemptConnectToApplications",
          "meta": {
            "developer": "Intermediate attack step."
          },
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "connectToApplications"
              },
              {
                "type": "attackStep",
                "name": "connectToApplicationsWithoutTriggeringVulnerabilities"
              }
            ]
          }
        },
        {
          "name": "connectToApplications",
          "meta": {
            "developer": "Connect to all the (server) Applications that are associated with this ConnectionRule."
          },
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "variable",
                  "name": "serverApplications"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "networkConnect"
                }
              }
            ]
          }
        },
        {
          "name": "connectToApplicationsWithoutTriggeringVulnerabilities",
          "meta": {
            "developer": "Connect to all the (server) Applications that are associated with this ConnectionRule, but without triggering vulnerabilities on them. This attack step is used to allow legitimate traffic even when payload inspection is enabled on the connection."
          },
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "variable",
                  "name": "serverApplications"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "networkConnectWithoutTriggeringVulnerabilities"
                }
              }
            ]
          }
        },
        {
          "name": "attemptDenialOfService",
          "meta": {
            "developer": "Intermediate attack step."
          },
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "denialOfService"
              }
            ]
          }
        },
        {
          "name": "denialOfService",
          "meta": {
          },
          "type": "and",
          "tags": [
          ],
          "risk": {
            "isConfidentiality": false,
            "isIntegrity": false,
            "isAvailability": true
          },
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "variable",
                  "name": "allApplications"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "denyFromNetworkingAsset"
                }
              }
            ]
          }
        },
        {
          "name": "attemptAllowWriteDataInTransit",
          "meta": {
            "developer": "Intermediate attack step."
          },
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "allowWriteDataInTransit"
              }
            ]
          }
        },
        {
          "name": "allowWriteDataInTransit",
          "meta": {
            "developer": "Only trigger write on Data in transit on client connections."
          },
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "collect",
                  "lhs": {
                    "type": "union",
                    "lhs": {
                      "type": "union",
                      "lhs": {
                        "type": "field",
                        "name": "networks"
                      },
                      "rhs": {
                        "type": "field",
                        "name": "inNetworks"
                      }
                    },
                    "rhs": {
                      "type": "field",
                      "name": "diodeInNetworks"
                    }
                  },
                  "rhs": {
                    "type": "field",
                    "name": "transitData"
                  }
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptWriteDataInTransitFromConnectionRule"
                }
              }
            ]
          }
        },
        {
          "name": "attemptAllowDenyDataInTransit",
          "meta": {
            "developer": "Intermediate attack step."
          },
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "allowDenyDataInTransit"
              }
            ]
          }
        },
        {
          "name": "allowDenyDataInTransit",
          "meta": {
            "developer": "Only trigger deny on Data in transit on client connections."
          },
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "collect",
                  "lhs": {
                    "type": "union",
                    "lhs": {
                      "type": "union",
                      "lhs": {
                        "type": "field",
                        "name": "networks"
                      },
                      "rhs": {
                        "type": "field",
                        "name": "inNetworks"
                      }
                    },
                    "rhs": {
                      "type": "field",
                      "name": "diodeInNetworks"
                    }
                  },
                  "rhs": {
                    "type": "field",
                    "name": "transitData"
                  }
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptDenyDataInTransitFromConnectionRule"
                }
              }
            ]
          }
        }
      ]
    }
  ],
  "associations": [
    {
      "name": "ApplicationVulnerability",
      "meta": {
        "developer": "Every Application can also be connected to any Vulnerability."
      },
      "leftAsset": "SoftwareVulnerability",
      "leftField": "vulnerabilities",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "Application",
      "rightField": "application",
      "rightMultiplicity": {
        "min": 0,
        "max": 1
      }
    },
    {
      "name": "ApplicationVulnerability",
      "meta": {
        "developer": "Every SoftwareProduct can also be connected to any Vulnerability."
      },
      "leftAsset": "SoftwareVulnerability",
      "leftField": "softProductVulnerabilities",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "SoftwareProduct",
      "rightField": "softwareProduct",
      "rightMultiplicity": {
        "min": 0,
        "max": 1
      }
    },
    {
      "name": "hardwareVulnerability",
      "meta": {
        "developer": "Every Application can also be connected to any Vulnerability."
      },
      "leftAsset": "HardwareVulnerability",
      "leftField": "vulnerabilities",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "Hardware",
      "rightField": "hardware",
      "rightMultiplicity": {
        "min": 0,
        "max": 1
      }
    },
    {
      "name": "SysExecution",
      "meta": {
        "developer": "Hardware on which Applications are running. The host hardware is not mandatory to be specified but if it is, it adds on the model!"
      },
      "leftAsset": "Hardware",
      "leftField": "hostHardware",
      "leftMultiplicity": {
        "min": 0,
        "max": 1
      },
      "rightAsset": "Application",
      "rightField": "sysExecutedApps",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "AppExecution",
      "meta": {
        "developer": "Application 1 runs application 2 runs application 3. (Where application 1 can be an OS, application 2 is a VM and application 3 is app running on the VM."
      },
      "leftAsset": "Application",
      "leftField": "hostApp",
      "leftMultiplicity": {
        "min": 0,
        "max": 1
      },
      "rightAsset": "Application",
      "rightField": "appExecutedApps",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "AppProtection",
      "meta": {
        "developer": "IDPSs can provide protection to other applications."
      },
      "leftAsset": "IDPS",
      "leftField": "protectorIDPSs",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "Application",
      "rightField": "protectedApps",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "AppSoftwareProduct",
      "meta": {
        "user": "An application can be associated with a software product that has some specific characteristics such as specific Vulnerabilities."
      },
      "leftAsset": "SoftwareProduct",
      "leftField": "appSoftProduct",
      "leftMultiplicity": {
        "min": 0,
        "max": 1
      },
      "rightAsset": "Application",
      "rightField": "softApplications",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "ZoneInclusion",
      "meta": {
        "developer": "Access on PhysicalZone will give physicalAccess on the deployed Hardware, but access to the hardware does not provide access to the physical zone (e.g. iLOs)."
      },
      "leftAsset": "PhysicalZone",
      "leftField": "physicalZones",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "Hardware",
      "rightField": "hardwareSystems",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "ZoneInclusion",
      "meta": {
        "developer": "Access on PhysicalZone will give physicalAccess on the deployed networks, but access to the network does not provide access to the physical zone."
      },
      "leftAsset": "PhysicalZone",
      "leftField": "physicalZones",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "Network",
      "rightField": "networks",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "ZoneAccess",
      "meta": {
        "developer": "A user may have access to different physical zones."
      },
      "leftAsset": "PhysicalZone",
      "leftField": "physicalZones",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "User",
      "rightField": "users",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "HardwareAccess",
      "meta": {
        "developer": "A user may have access to different hardware systems, rigs, or components."
      },
      "leftAsset": "Hardware",
      "leftField": "hardwareSystems",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "User",
      "rightField": "users",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "ConnectionRule",
      "meta": {
        "user": "A routing firewall has routing or firewall rules specified by connections between networks or applications respectively."
      },
      "leftAsset": "RoutingFirewall",
      "leftField": "routingFirewalls",
      "leftMultiplicity": {
        "min": 0,
        "max": 1
      },
      "rightAsset": "ConnectionRule",
      "rightField": "connectionRules",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "ManagedBy",
      "meta": {
        "user": "A routing firewall can have an admin/manager interface (application) that is accesible from a network location."
      },
      "leftAsset": "RoutingFirewall",
      "leftField": "managedRoutingFw",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "Application",
      "rightField": "managerApp",
      "rightMultiplicity": {
        "min": 0,
        "max": 1
      }
    },
    {
      "name": "NetworkExposure",
      "meta": {
        "modeler": "This is DEPRECATED and should only be used by fully aware modelers.",
        "developer": "This can equivalently be modeled using a ConnectionRule but this direct approach should be prefered in the case where the application is “located” in the same network as the host on which it is running.",
        "user": "An application can communicate / be exposed on a network."
      },
      "leftAsset": "Network",
      "leftField": "networks",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "Application",
      "rightField": "applications",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "ClientAccess",
      "meta": {
        "user": "A client application can communicate over a network."
      },
      "leftAsset": "Network",
      "leftField": "clientAccessNetworks",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "Application",
      "rightField": "clientApplications",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "ApplicationConnection",
      "meta": {
        "user": "An application can communicate over one or more (mesh type) bidirectional connections.",
        "modeler": "ConnectionRules associated with Applications are practically expressing a traffic flow."
      },
      "leftAsset": "Application",
      "leftField": "applications",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "ConnectionRule",
      "rightField": "appConnections",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "InApplicationConnection",
      "meta": {
        "user": "Two or more applications can also be inter-connected via a uni-directional connection. In means that this is the server side application, awaiting incoming connections."
      },
      "leftAsset": "Application",
      "leftField": "inApplications",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "ConnectionRule",
      "rightField": "ingoingAppConnections",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "OutApplicationConnection",
      "meta": {
        "user": "Two or more applications can also be inter-connected via a uni-directional connection. Out means that this is the client side application initiating connections."
      },
      "leftAsset": "Application",
      "leftField": "outApplications",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "ConnectionRule",
      "rightField": "outgoingAppConnections",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "NetworkConnection",
      "meta": {
        "user": "Two or more networks can also be inter-connected via a bidirectional connection."
      },
      "leftAsset": "Network",
      "leftField": "networks",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "ConnectionRule",
      "rightField": "netConnections",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "InNetworkConnection",
      "meta": {
        "user": "Two or more networks can also be inter-connected via a uni-directional connection. In means that ingoing traffic to the network is allowed."
      },
      "leftAsset": "Network",
      "leftField": "inNetworks",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "ConnectionRule",
      "rightField": "ingoingNetConnections",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "OutNetworkConnection",
      "meta": {
        "user": "Two or more networks can also be inter-connected via a uni-directional connection. Out means that outgoing traffic from the network is allowed."
      },
      "leftAsset": "Network",
      "leftField": "outNetworks",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "ConnectionRule",
      "rightField": "outgoingNetConnections",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "DiodeInNetworkConnection",
      "meta": {
        "user": "Two or more networks can also be inter-connected via a uni-directional connection that acts like a diode. That means that no repsonses can come back after connection initiation."
      },
      "leftAsset": "Network",
      "leftField": "diodeInNetworks",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "ConnectionRule",
      "rightField": "diodeIngoingNetConnections",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "DataContainment",
      "meta": {
        "user": "Data can be contained inside other data."
      },
      "leftAsset": "Data",
      "leftField": "containingData",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "Data",
      "rightField": "containedData",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "AppContainment",
      "meta": {
        "user": "An application should be able to contain some data."
      },
      "leftAsset": "Data",
      "leftField": "containedData",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "Application",
      "rightField": "containingApp",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "SendData",
      "meta": {
        "user": "An application can also send some data that are supposed to be transfered over a connection. This expresses an active connection."
      },
      "leftAsset": "Data",
      "leftField": "sentData",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "Application",
      "rightField": "senderApp",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "ReceiveData",
      "meta": {
        "user": "An application can also receive some data that are supposed to be transfered over a connection. This expresses an active connection."
      },
      "leftAsset": "Data",
      "leftField": "receivedData",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "Application",
      "rightField": "receiverApp",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "DataInTransit",
      "meta": {
        "user": "A network can also contain some data that are supposed to be network-wide available."
      },
      "leftAsset": "Data",
      "leftField": "transitData",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "Network",
      "rightField": "transitNetwork",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "DataHosting",
      "meta": {
        "user": "Data can be hosted on hardware."
      },
      "leftAsset": "Hardware",
      "leftField": "hardware",
      "leftMultiplicity": {
        "min": 0,
        "max": 1
      },
      "rightAsset": "Data",
      "rightField": "hostedData",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "InfoContainment",
      "meta": {
        "user": "Data can contain information, as for example credentials."
      },
      "leftAsset": "Data",
      "leftField": "containerData",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "Information",
      "rightField": "information",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "Replica",
      "meta": {
        "user": "Information can be replicated across multiple data assets that offer redundancy."
      },
      "leftAsset": "Data",
      "leftField": "dataReplicas",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "Information",
      "rightField": "replicatedInformation",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "EncryptionCredentials",
      "meta": {
        "user": "Encrypted data can be associated with the relevant encryption credentials."
      },
      "leftAsset": "Data",
      "leftField": "encryptedData",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "Credentials",
      "rightField": "encryptCreds",
      "rightMultiplicity": {
        "min": 0,
        "max": 1
      }
    },
    {
      "name": "SigningCredentials",
      "meta": {
        "user": "Signed data can be associated with the relevant signing credentials."
      },
      "leftAsset": "Data",
      "leftField": "signedData",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "Credentials",
      "rightField": "signingCreds",
      "rightMultiplicity": {
        "min": 0,
        "max": 1
      }
    },
    {
      "name": "HashedCredentials",
      "meta": {
        "user": "Credentials can be associated with their hashed counterparts. Multiple hashes can be generated for the same Credentials, but a hash is unique to one set of Credentials."
      },
      "leftAsset": "Credentials",
      "leftField": "hashes",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "Credentials",
      "rightField": "origCreds",
      "rightMultiplicity": {
        "min": 0,
        "max": 1
      }
    },
    {
      "name": "ConditionalAuthentication",
      "meta": {
        "user": "Credentials can be associated with other Credentials to depict conditional authentication procedures, such as multi-factor authentication."
      },
      "leftAsset": "Credentials",
      "leftField": "credentials",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "Credentials",
      "rightField": "requiredFactors",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "Origin",
      "meta": {
        "user": "Any SoftwareProduct can be associated with Origin Data that represents the source from which this software was obtained."
      },
      "leftAsset": "Data",
      "leftField": "originData",
      "leftMultiplicity": {
        "min": 0,
        "max": 1
      },
      "rightAsset": "SoftwareProduct",
      "rightField": "originSoftwareProduct",
      "rightMultiplicity": {
        "min": 0,
        "max": 1
      }
    },
    {
      "name": "IdentityCredentials",
      "meta": {
      },
      "leftAsset": "Identity",
      "leftField": "identities",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "Credentials",
      "rightField": "credentials",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "UserAssignedIdentities",
      "meta": {
      },
      "leftAsset": "Identity",
      "leftField": "userIds",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "User",
      "rightField": "users",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "CanAssume",
      "meta": {
        "user": "Starting from a parent Identity, the child Identities can be assumed due to inheritance."
      },
      "leftAsset": "Identity",
      "leftField": "parentId",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "Identity",
      "rightField": "childId",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "MemberOf",
      "meta": {
      },
      "leftAsset": "Group",
      "leftField": "memberOf",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "Identity",
      "rightField": "groupIds",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "MemberOf",
      "meta": {
      },
      "leftAsset": "Group",
      "leftField": "parentGroup",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "Group",
      "rightField": "childGroups",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "ExecutionPrivilegeAccess",
      "meta": {
        "user": "Every application executes on a system with privileges of a specified identity on the system. If the application is compromised then the privileges should be compromised."
      },
      "leftAsset": "IAMObject",
      "leftField": "executionPrivIAMs",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "Application",
      "rightField": "execPrivApps",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "HighPrivilegeApplicationAccess",
      "meta": {
        "user": "High privilege application access on an Application results in the (full) access/compromise of the application and all the child applications."
      },
      "leftAsset": "IAMObject",
      "leftField": "highPrivAppIAMs",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "Application",
      "rightField": "highPrivApps",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "LowPrivilegeApplicationAccess",
      "meta": {
        "user": "Low privilege application access on an Application allows only the local interaction with the application and all the specified privileges."
      },
      "leftAsset": "IAMObject",
      "leftField": "lowPrivAppIAMs",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "Application",
      "rightField": "lowPrivApps",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "ReadPrivileges",
      "meta": {
      },
      "leftAsset": "IAMObject",
      "leftField": "readingIAMs",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "Data",
      "rightField": "readPrivData",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "WritePrivileges",
      "meta": {
      },
      "leftAsset": "IAMObject",
      "leftField": "writingIAMs",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "Data",
      "rightField": "writePrivData",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "DeletePrivileges",
      "meta": {
      },
      "leftAsset": "IAMObject",
      "leftField": "deletingIAMs",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "Data",
      "rightField": "deletePrivData",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "HasPrivileges",
      "meta": {
      },
      "leftAsset": "Identity",
      "leftField": "privilegeIdentities",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "Privileges",
      "rightField": "identityPrivileges",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "HasPrivileges",
      "meta": {
        "user": "Identities, Groups, and Privileges may have account management roles for other Identities, Groups, and Privileges."
      },
      "leftAsset": "Group",
      "leftField": "privilegeGroups",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "Privileges",
      "rightField": "groupPrivileges",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "AccountManagement",
      "meta": {
      },
      "leftAsset": "IAMObject",
      "leftField": "managers",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "IAMObject",
      "rightField": "managedIAMs",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    }
  ]
}